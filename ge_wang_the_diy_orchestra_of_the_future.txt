Talk	en	zh-tw
ge_wang_the_diy_orchestra_of_the_future	"I want to talk to you about one thing and just one thing only, and this has to do with when people ask me, what do you do? To which I usually respond, I do computer music. Now, a number of people just stop talking to me right then and there, and the rest who are left usually have this blank look in their eye, as if to say, what does that mean? And I feel like I'm actually depriving them of information by telling them this, at which point I usually panic and spit out the first thing that comes to my mind, which is, I have no idea what I'm doing. Which is true. That's usually followed by a second thought, which is, whatever it is that I'm doing, I love it. And today, I want to, well, share with you something I love, and also why. And I think we'll begin with just this question: What is computer music? And I'm going to try to do my best to provide a definition, maybe by telling you a story that goes through some of the stuff I've been working on. And the first thing, I think, in our story is going to be something called ChucK. Now, ChucK is a programming language for music, and it's open-source, it's freely available, and I like to think that it crashes equally well on all modern operating systems. And instead of telling you more about it, I'm just going to give you a demo. By the way, I'm just going to nerd out for just a few minutes here, so I would say, don't freak out. In fact, I would invite all of you to join me in just geeking out. If you've never written a line of code before in your life, do not worry. I'll bet you'll be able to come along on this. First thing I'm going to do is to make a sine wave oscillator, and we're going to called the sine wave generator ""Ge."" And then we're going to connect ""Ge"" to the DAC. Now this is kind of the abstraction for the sound output on my computer. Okay? So I've connected myself into the speaker. Next, I'm going to say my frequency is 440 hertz, and I'm going to let time advance by two seconds through this operation. All right, so if I were to play this — (Tone) — you would hear a sine wave at 440 hertz for two seconds. Okay, great. Now I'm going to copy and paste this, and then just change some of these numbers, 220.5, 440 I shall leave it as that, and .5 and 880. By doubling the frequency, we're actually going up in successive octaves, and then we have this sequence — (Tones) — of tones. Okay, great, now I can imagine creating all kinds of really horrible single sine wave pieces of music with this, but I'm going to do something that computers are really good at, which is repetition. I'm going to put this all in a while loop, and you actually don't need to indent, but this is purely for aesthetic reasons. It's good practice. And when we do this — (Tones) — that's going to go on for a while. In fact, it's probably not going to stop until this computer disintegrates. And I can't really empirically prove that to you, but I hope you'll believe me when I say that. Next, I'm going to replace this 220 by math.random2f. I'm going to generate a random number between 30 and 1,000 and send that to the frequency of me. And I'm going to do this every half a second. (Tones) Let's do this every 200 milliseconds. (Tones) One hundred. (Tones) All right. At this point, we've reached something that I would like to think of as the canonical computer music. This is, to me, the sound that mainframes are supposed to be making when they're thinking really hard. It's this sound, it's like, the square root of five million. So is this computer music? Yeah, I guess by definition, it's kind of computer music. It's probably not the kind of music you would listen to cruising down the highway, but it's a foundation of computer-generated music, and using ChucK, we've actually been building instruments in the Stanford Laptop Orchestra, based right here at Stanford Center for Computer Research in Music and Acoustics. Now the Laptop Orchestra is an ensemble of laptops, humans and special hemispherical speaker arrays. Now the reason we have these is so that for the instruments that we create out of the laptop, we want the sound to come out of somewhere near the instrument and the performer, kind of much like a traditional, acoustic instrument. Like, if I were to play a violin here, the sound would naturally not come out of the P.A. system, but from the artifact itself. So these speakers are meant to emulate that. In fact, I'm going to show you how we actually built them. The first step is to go to IKEA and buy a salad bowl. This is an 11-inch Blanda Matt. That's the actual name, and I actually use one of these to make salad at home as well, I kid you not. And the first step is you turn it upside down, and then you drill holes in them, six holes per hemi, and then make a base plate, put car speaker drivers in them along with amplifiers in the enclosure, and you put that all together and you have these hemispherical speaker arrays. Add people, add laptops, you have a laptop orchestra. And what might a laptop orchestra sound like? Well, let me give you a demonstration of about 200 instruments we've created so far for the Laptop Orchestra. And what I'm going to do is actually come over to this thing. This thing I have in front of me actually used to be a commodity gaming controller called a Gametrak. This thing actually has a glove you can put on your hands. It's tethered to the base, and this will track the position of your hands in real time. It was originally designed as a golfing controller to detect the motion of your swing. That turned out to be a rather large commercial non-success, at which point they slashed prices to 10 dollars, at which point computer music researchers said, ""This is awesome! We can prototype instruments out of this."" So let me show you one instrument we've created, one of many, and this instrument is called ""Twilight,"" and it's meant to go with this metaphor of pulling a sound out of the ground. So let me see if this will work. (Music) And put it back. And then if you go to the left, right, it sounds like an elephant in pain. This is a slightly metallic sound. Turn it just a bit. (Music) It's like a hovering car. Okay. This third one is a ratchet-like interaction, so let me turn it up. (Music) So it's a slightly different interaction. The fourth one is a drone. (Music) And finally, let's see, this is a totally different interaction, and I think you have to imagine that there's this giant invisible drum sitting right here on stage, and I'm going to bang it. (Drum) (Laughter) So there we go, so that's one of many instruments in the Laptop Orchestra. (Applause) Thank you. And when you put that together, you get something that sounds like this. (Music) Okay, and so, I think from the experience of building a lot of instruments for the Laptop Orchestra, and I think from the curiosity of wondering, what if we took these hopefully expressive instruments and we brought it to a lot of people, plus then a healthy bout of insanity — put those three things together — led to me actually co-founding a startup company in 2008 called Smule. Now Smule's mission is to create expressive, mobile music things, and one of the first musical instruments we created is called Ocarina. And I'm going to just demo this for you real quick. So Ocarina — (Music) — is based on this ancient flute-like instrument called the ocarina, and this one is the four-hole English pendant configuration, and you're literally blowing into the microphone to make the sound. And there's actually a little ChucK script running in here that's detecting the strength of your blowing and also synthesizing the sound. (Music) And vibrato is mapped to the accelerometer, so you can get — (Music) All right. So let me play a little ditty for you, a little Bach. And here, you'll hear a little accompaniment with the melody. The accompaniment actually follows the melody, not the other way around. (Music) And this was designed to let you take your time and figure out where your expressive space is, and you can just hang out here for a while, for a really dramatic effect, if you want, and whenever you're ready — (Music) And on these longer notes, I'm going to use more vibrato towards the end of the notes to give it a little bit more of an expressive quality. (Music) Huh, that's a nice chord to end this excerpt on. (Applause) Thank you. So I think a good question to ask about Ocarina is, is this a toy or it an instrument? Maybe it's both, but for me, I think the more important question is, is it expressive? And at the same time, I think creating these types of instruments asks a question about the role of technology, and its place for how we make music. Apparently, for example, not that long ago, like only a hundred years ago — that's not that long in the course of human history — families back then used to make music together as a common form of entertainment. I don't think that's really happening that much anymore. You know, this is before radio, before recording. In the last hundred years, with all this technology, we now have more access to music as listeners and consumers, but somehow, I think we're making less music than ever before. I'm not sure why that would be. Maybe it's because it's too easy just to hit play. And while listening to music is wonderful, there's a special joy to making music that's all its own. And I think that's one part of the goal of why I do what I do is kind of to take us back to the past a little bit. Right? Now, if that's one goal, the other goal is to look to the future and think about what kind of new musical things can we make that we don't perhaps yet have names for that's enabled by technology, but ultimately might change the way that humans make music. And I'll just give you one example here, and this is Ocarina's other feature. This is a globe, and here you're actually listening to other users of Ocarina blow into their iPhones to play something. This is ""G.I.R."" from Texas, ""R.I.K."" I don't know why it's these three-letter names today, Los Angeles. They're all playing pretty, somewhat minimal music here. (Music) And the idea with this is that, well, technology should not be foregrounded here, and — (Laughter) — we've actually opened this up. The first thought is that, hey, you know there's somebody somewhere out there playing some music, and this is a small but I think important human connection to make that perhaps the technology affords. As a final example, and perhaps my favorite example, is that in the wake of the 2011 earthquake and tsunami disaster in Japan, a woman reached out in one of our singing apps to try to get people to join in to sing with her on a version of ""Lean on Me."" Now, in these apps, there's this thing that allows any user to add their voice to an existing performance by any other user or group of users, so in some sense, she's created this kind of global ad hoc corral of strangers, and within weeks, thousands of people joined in on this, and you can kind of see people coming from all around the world and all these lines converging on the origin where the first rendition of the song was sung, and that's in Tokyo. And this is what it sounds like  when there's 1,000 people. This is 1,000 voices. (Recording) ♪ Sometimes in our lives ♪ ♪ We all have pain, we all have sorrow ♪ ♪ But if we are wise ♪ ♪ We know that there's always tomorrow ♪ ♪ Lean on me ♪ ♪ When you're not strong ♪ ♪ And I'll be your friend ♪ ♪ I'll help you carry on ♪ ♪ For it won't be long ♪ ♪ Till I'm gonna need ♪ ♪ Somebody to lean on ♪ ♪ Just lean on — ♪ Is this computer music? (Applause) Was that computer music? Yeah, I guess so; it's something that you really couldn't have done without computers. But at the same time, it's also just human, and I think what I've essentially answered so far is maybe why I do the stuff that I do, and let's just finally return to the first question: What is computer music? And I think that the catch here is that, at least to me, computer music isn't really about computers. It is about people. It's about how we can use technology to change the way we think and do and make music, and maybe even add to how we can connect with each other through music. And with that, I want to say, this is computer music, and thank you for listening. (Applause)"	"我想和各位聊一個話題，就一個話題，這涉及到人們常問我的一個問題：你是從事哪個行業的？對此我總是這樣答覆，我搞電腦音樂這行。 很多人馬上就此打住，不再追問，餘下一些人呢，則從眼神裡流露出迷茫，好似在說，那是什麽概念？我也覺得那樣答覆給他們的訊息量太少。此時我常常感到心慌，腦海裡浮現的第一個念頭隨即脫口而出：我自己也不清楚那是什麽概念。這是實話。隨後我腦海裡又浮出第二個念頭：無論我從事的這行是什麼，我都充滿熱情。今天，我想...和各位分享我所熱愛的這個領域，介紹我愛這行的原因。 我想我們不妨先從一個問題開始：何謂電腦音樂？首先我想先講一個故事，來給它下個定義吧，故事貫穿了我至今仍在持續研發的一些東西。 我想，故事中先出場的角色應該是這個叫做 ChucK 的工具。ChucK 是一種音樂創作專用的程式語言，它是一款開放軟體，免費下載使用，我覺得它在所有現代作業系統上都能很好地崩潰。我覺得，與其用言語描述，還不如給各位演示一下。不好意思，我等一下會像電腦阿宅一樣。大概幾分鐘時間，我希望各位不要詫異。實際上，我想邀請各位跟我一起宅一下。如果你之前從沒寫過代碼，也不用擔心。我敢保證，你很快就能上手。 首先我要編製一個正弦波振盪器，暫時把這個正弦波發生器命名為""Ge""。我們再把 ""Ge"" 連接到 DAC。說白了就是我電腦上的音頻輸出。理解了吧？這樣我就把電腦接到揚聲器了。下一步，我要把頻率設為440 赫茲，我還要做個操作把時間提前兩秒。好了，我們來試播一下...（音調）各位聽到的是一段兩秒鐘的 440 赫茲正弦波。好，很棒。下面我來複製、貼上這段代碼，然後簡單改一下數字，220.5，440 不用改，還有 .5 和 880。頻率翻倍後，我們實際上是連續八度音階上升，然後我們聽到這種序列的...（音調）...音調。嗯，不錯，我想如果用這種方法來編各種單個正弦波的樂曲，那得多恐怖啊。不過我要發揮電腦的強項，也就是重複。我把這段代碼放入一個 while 循環，實際操作時不需行首縮進，我這樣做純粹是為了美觀。這是個好習慣。這步完成後，（音調）這樣要持續好一陣子。事實上，它可能不會停下來，除非這臺電腦支離破碎了。當然我也沒經歷過，不能向各位證實，但是我希望各位相信我。接下來，我要將這個 220替換成 math.random2f。我會任意生成一個數字，介於 30 至 1,000 之間，再發送到我的頻率。我希望每半秒鐘執行一次。（音調）每 200 毫秒執行一次吧。（音調）一百。（音調）不錯。現在我們終於小有收穫，我覺得這可稱為電腦音樂的範本。我覺得這是主機發出的聲音，表示它們在很認真地思考。這種聲音有點像五百萬的平方根。 各位覺得這是電腦音樂嗎？我想按定義來說是的，它算是電腦音樂。也許不是你在高速公路上中速行駛時聽的那種音樂，但它的確給電腦生成的音樂打下基礎，藉助 ChucK，我們一直在為史丹佛筆電交響樂團打造各種樂器，我們的基地就設在史丹佛電腦音樂與聲學研究中心 (CCRMA)。 筆電交響樂團由筆電、表演者和特製的半球形揚聲器陣列組成。之所以需要這些設備，是因為我們藉助筆電所打造的樂器，我們希望它們的聲音來自設備和表演者附近某處，這有點像傳統的聲學儀器。比方說，如果我在這兒演奏小提琴，音樂自然不會從擴音裝置裡發出，而是從樂器本身發出。所以，這些揚聲器採用相似的原理。接下來我給各位介紹一下具體的製作過程。首先是去宜家買一個沙拉專用木碗。這是 11 英寸的布朗達麥特。這是它的原名，其實我就是用這個碗在家裡做沙拉，真的，我沒騙各位。第一步，倒過來放，然後在上面鑽孔，每個半球面上鑽六個孔，再做一塊底板，放入汽車揚聲器驅動系統，裡面再放進功放，把這些零件組裝起來後，就成了這些半球形揚聲器陣列。加上演奏者和筆電，我們就組建了一支筆電交響樂團。 筆電交響樂團聽起來效果如何？現在，我給各位演示一下迄今為止我們給筆電交響樂團打造的 200 多種樂器。接下來我要走到這個東西旁邊。我前面這件東西原本是一個遊戲控制器產品，名字叫 Gametrak。控制器自帶手套一隻，它與底板相連，能追蹤雙手的運動軌跡，即時跟蹤。這個設計起初是用作高爾夫球控制器，監測揮杆的運動軌跡。結果這個產品的銷售業績差得一塌糊塗，最後這家公司把價格降到 10 美元，最後電腦音樂的研究人員表示：「這太棒了！我們可以用這東西打造樂器原型。」 我給各位展示我們製作的一種樂器，這個樂器只是其中一種，名字叫做「暮光」，寓意是地平線上升起的音樂。我來試試效果怎麼樣。 （音樂） 再放回去。然後往左，往右，聽起來像大象在呻吟。 現在有點像金屬的聲音。稍微轉一下。 （音樂）這時又像在空中盤旋的汽車。 好了。 第三種聲音像棘輪在轉動，所以我把聲音調高點。 （音樂） 聽起來效果略有不同。 第四種聲音像雄蜂。 （音樂）最後，我們聽一下，這個效果截然不同，我想各位不妨設想一下，臺上放著一面隱形的大鼓，我來敲一下。（鼓聲）（笑聲）演示完畢，這就是筆電交響樂團樂器組合中的一種。 （掌聲） 謝謝各位。 當我們把這些組合起來後，就會產生這樣的聲音。 （音樂） 嗯，所以我覺得根據給筆電交響樂團製造各種樂器的經驗，同時懷著一份對新鮮事物的好奇心，我想能否把這些有望一鳴驚人的樂器帶給大眾，加上一股有益身心的癡狂，能否把這些想法結合起來，於是在 2008 年我與人聯合創辦了一家企業名字叫做 Smule。 Smule 的使命是創造令人驚嘆叫絕的移動樂器，首批樂器當中，有一種叫做 Ocarina。下面我給各位快速演示一下。實際上，Ocarina...（音樂）是仿照古代一種笛子，陶笛製作而成，這個樂器採用英式 4 孔懸墜型結構，我們是通過吹麥克風來發聲。裡面實際上有一段 ChucK 程式，能檢測出我們吹奏的力度並合成聲音。（音樂）用加速計來使顫音形象化，我們將聽到...（音樂）好的。接下來我給各位演奏一支小曲，巴赫的作品。我們將聽到音樂的伴奏。伴奏會追隨樂曲的節奏，而不是相反的情況。 （音樂） 這支曲子可以讓我們停下來，忘卻言語，用心感悟，身處何處，讓時間停止片刻，感受非凡一刻，如果你想的話，當你做好準備時... （音樂） 對於這些長音符，我想在音符的尾聲部份增加一些顫音，豐富音符的表現力。 （音樂） 哈，這段和弦為這節樂曲畫上完美的句號了。 （掌聲） 謝謝各位。 現在，關於 Ocarina，我覺得各位可能會問，它究竟是玩具還是樂器？也許兼而有之。但對我而言，我更關注的問題是，它的表現力如何？與此同時，我也在想，製作出這些樂器後，我們不禁會思考技術的作用，以及技術對音樂創作的影響。舉個明顯的例子，不久之前，大概一百年前，說不久，是因為這段時間在人類歷史長河裡不算太長，那時家家戶戶常常全家總動員，一起創作音樂，自娛自樂。不過，我覺得這種情況現在很少見了。當然，那時還沒有收音機、錄音機。過去一百年間，憑藉技術的力量，我們可以更方便地欣賞和享受音樂了。然而，我認為當今我們所創作的音樂作品數量堪稱史上最少。我不清楚這其中的原因。也許是因為點擊播放簡直輕而易舉。儘管欣賞音樂令人心曠神怡，創作整首樂曲更是別有一番樂趣。我想這正是我現在的工作目標之一，就是讓我們重返過去。對不對？ 除了這個目標，另外一個目標是展望未來，思考我們能夠創作哪些新型樂曲。這些樂曲甚至連名字都還未知。樂曲創作藉助技術完成，但最終卻可能改變人類創作音樂的方式。在此我舉一個例子，就是 Ocarina 的第二個特徵。這是地球，我們可以聽到其他 Ocarina 用戶對著 iPhone 吹奏某種音樂。這是來自美國德州的 ""G.I.R.""。還有 ""R.I.K.""，來自洛杉磯，不知道今天怎麼那麼巧都三個字母。他們的演奏非常漂亮，讓我們聽一下精華部分。 （音樂） 這裡有一個概念，那就是我們不要過分強調科技，同時...（笑聲）我們已經實現突破。第一個想法，嘿，你知道某個地方有個人正在演奏某種音樂，這種人際交流雖然只是一個細節，但我覺得很重要，因為這是技術所能實現的結果。 最後再舉個例子，這也許是我最喜歡的例子，2011 年日本發生地震和海嘯災難後，一位女士用我們的一款歌唱應用軟體邀請其他人和她一起唱「靠在我肩」這首歌。有了這種應用軟體，任何用戶都可以把自己的聲音加到其他用戶或用戶群組已創作的樂曲當中，因此，在某種意義上，她創作了一首全球陌生人即興大合唱，數週內，成千上萬的用戶加入這項活動，你能看到幾乎來自全球各地的用戶，所有的聲音都匯聚到「起點」，這首歌第一版誕生的地方，也就是東京。我們來聽聽千人同時歌唱的效果這裡有一千種聲音。 （錄音）♪ 每個人的一生中 ♪ ♪ 難免會有傷痛，難免會有悲苦 ♪ ♪ 但若理智思考 ♪ ♪ 我們會發現明天會更好 ♪ ♪ 靠在我肩 ♪ ♪ 當你脆弱疲勞 ♪ ♪ 我永遠是你的朋友 ♪ ♪ 我會助你繼續奔跑 ♪ ♪ 因為不久之後 ♪ ♪ 我也將要一個肩膀 ♪ ♪ 來讓我依靠 ♪ ♪ 讓我依靠 — ♪ 這是電腦音樂嗎？ （掌聲） 那是電腦音樂嗎？嗯，我想是的。這種音樂沒有電腦，我們是無法創作出來的。同時，這也是由人演唱的，我想，我也許基本上回答了這個問題，就是我為何從事手頭的工作？最後讓我回到最初的問題：電腦音樂是什麽東西？我想，這個問題的玄機，至少在我看來，就是電腦音樂其實並非關乎電腦。它關乎人，關乎我們如何利用技術改變我們思考、創作和製造音樂的方式，也許還能豐富我們透過音樂進行交流的方式。 總而言之，我覺得，這就是電腦音樂，感謝各位聆聽。 （掌聲）"
