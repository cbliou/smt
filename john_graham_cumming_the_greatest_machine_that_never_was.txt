Talk	en	zh-tw
john_graham_cumming_the_greatest_machine_that_never_was	"So the machine I'm going to talk you about is what I call the greatest machine that never was. It was a machine that was never built, and yet, it will be built. It was a machine that was designed long before anyone thought about computers. If you know anything about the history of computers, you will know that in the '30s and the '40s, simple computers were created that started the computer revolution we have today, and you would be correct, except for you'd have the wrong century. The first computer was really designed in the 1830s and 1840s, not the 1930s and 1940s. It was designed, and parts of it were prototyped, and the bits of it that were built are here in South Kensington. That machine was built by this guy, Charles Babbage. Now, I have a great affinity for Charles Babbage because his hair is always completely unkempt like this in every single picture. (Laughter) He was a very wealthy man, and a sort of, part of the aristocracy of Britain, and on a Saturday night in Marylebone, were you part of the intelligentsia of that period, you would have been invited round to his house for a soiree — and he invited everybody: kings, the Duke of Wellington, many, many famous people — and he would have shown you one of his mechanical machines. I really miss that era, you know, where you could go around for a soiree and see a mechanical computer get demonstrated to you. (Laughter) But Babbage, Babbage himself was born at the end of the 18th century, and was a fairly famous mathematician. He held the post that Newton held at Cambridge, and that was recently held by Stephen Hawking. He's less well known than either of them because he got this idea to make mechanical computing devices and never made any of them. The reason he never made any of them, he's a classic nerd. Every time he had a good idea, he'd think, ""That's brilliant, I'm going to start building that one. I'll spend a fortune on it. I've got a better idea. I'm going to work on this one. (Laughter) And I'm going to do this one."" He did this until Sir Robert Peel, then Prime Minister, basically kicked him out of Number 10 Downing Street, and kicking him out, in those days, that meant saying, ""I bid you good day, sir."" (Laughter) The thing he designed was this monstrosity here, the analytical engine. Now, just to give you an idea of this, this is a view from above. Every one of these circles is a cog, a stack of cogs, and this thing is as big as a steam locomotive. So as I go through this talk, I want you to imagine this gigantic machine. We heard those wonderful sounds of what this thing would have sounded like. And I'm going to take you through the architecture of the machine — that's why it's computer architecture — and tell you about this machine, which is a computer. So let's talk about the memory. The memory is very like the memory of a computer today, except it was all made out of metal, stacks and stacks of cogs, 30 cogs high. Imagine a thing this high of cogs, hundreds and hundreds of them, and they've got numbers on them. It's a decimal machine. Everything's done in decimal. And he thought about using binary. The problem with using binary is that the machine would have been so tall, it would have been ridiculous. As it is, it's enormous. So he's got memory. The memory is this bit over here. You see it all like this. This monstrosity over here is the CPU, the chip, if you like. Of course, it's this big. Completely mechanical. This whole machine is mechanical. This is a picture of a prototype for part of the CPU which is in the Science Museum. The CPU could do the four fundamental functions of arithmetic — so addition, multiplication, subtraction, division — which already is a bit of a feat in metal, but it could also do something that a computer does and a calculator doesn't: this machine could look at its own internal memory and make a decision. It could do the ""if then"" for basic programmers, and that fundamentally made it into a computer. It could compute. It couldn't just calculate. It could do more. Now, if we look at this, and we stop for a minute, and we think about chips today, we can't look inside a silicon chip. It's just so tiny. Yet if you did, you would see something very, very similar to this. There's this incredible complexity in the CPU, and this incredible regularity in the memory. If you've ever seen an electron microscope picture, you'll see this. This all looks the same, then there's this bit over here which is incredibly complicated. All this cog wheel mechanism here is doing is what a computer does, but of course you need to program this thing, and of course, Babbage used the technology of the day and the technology that would reappear in the '50s, '60s and '70s, which is punch cards. This thing over here is one of three punch card readers in here, and this is a program in the Science Museum, just not far from here, created by Charles Babbage, that is sitting there — you can go see it — waiting for the machine to be built. And there's not just one of these, there's many of them. He prepared programs anticipating this would happen. Now, the reason they used punch cards was that Jacquard, in France, had created the Jacquard loom, which was weaving these incredible patterns controlled by punch cards, so he was just repurposing the technology of the day, and like everything else he did, he's using the technology of his era, so 1830s, 1840s, 1850s, cogs, steam, mechanical devices. Ironically, born the same year as Charles Babbage was Michael Faraday, who would completely revolutionize everything with the dynamo, transformers, all these sorts of things. Babbage, of course, wanted to use proven technology, so steam and things. Now, he needed accessories. Obviously, you've got a computer now. You've got punch cards, a CPU and memory. You need accessories you're going to come with. You're not just going to have that, So, first of all, you had sound. You had a bell, so if anything went wrong — (Laughter) — or the machine needed the attendant to come to it, there was a bell it could ring. (Laughter) And there's actually an instruction on the punch card which says ""Ring the bell."" So you can imagine this ""Ting!"" You know, just stop for a moment, imagine all those noises, this thing, ""Click, clack click click click,"" steam engine, ""Ding,"" right? (Laughter) You also need a printer, obviously, and everyone needs a printer. This is actually a picture of the printing mechanism for another machine of his, called the Difference Engine No. 2, which he never built, but which the Science Museum did build in the '80s and '90s. It's completely mechanical, again, a printer. It prints just numbers, because he was obsessed with numbers, but it does print onto paper, and it even does word wrapping, so if you get to the end of the line, it goes around like that. You also need graphics, right? I mean, if you're going to do anything with graphics, so he said, ""Well, I need a plotter. I've got a big piece of paper and an ink pen and I'll make it plot."" So he designed a plotter as well, and, you know, at that point, I think he got pretty much a pretty good machine. Along comes this woman, Ada Lovelace. Now, imagine these soirees, all these great and good comes along. This lady is the daughter of the mad, bad and dangerous-to-know Lord Byron, and her mother, being a bit worried that she might have inherited some of Lord Byron's madness and badness, thought, ""I know the solution: Mathematics is the solution. We'll teach her mathematics. That'll calm her down."" (Laughter) Because of course, there's never been a mathematician that's gone crazy, so, you know, that'll be fine. (Laughter) Everything'll be fine. So she's got this mathematical training, and she goes to one of these soirees with her mother, and Charles Babbage, you know, gets out his machine. The Duke of Wellington is there, you know, get out the machine, obviously demonstrates it, and she gets it. She's the only person in his lifetime, really, who said, ""I understand what this does, and I understand the future of this machine."" And we owe to her an enormous amount because we know a lot about the machine that Babbage was intending to build because of her. Now, some people call her the first programmer. This is actually from one of — the paper that she translated. This is a program written in a particular style. It's not, historically, totally accurate that she's the first programmer, and actually, she did something more amazing. Rather than just being a programmer, she saw something that Babbage didn't. Babbage was totally obsessed with mathematics. He was building a machine to do mathematics, and Lovelace said, ""You could do more than mathematics on this machine."" And just as you do, everyone in this room already's got a computer on them right now, because they've got a phone. If you go into that phone, every single thing in that phone or computer or any other computing device is mathematics. It's all numbers at the bottom. Whether it's video or text or music or voice, it's all numbers, it's all, underlying it, mathematical functions happening, and Lovelace said, ""Just because you're doing mathematical functions and symbols doesn't mean these things can't represent other things in the real world, such as music."" This was a huge leap, because Babbage is there saying, ""We could compute these amazing functions and print out tables of numbers and draw graphs,"" — (Laughter) — and Lovelace is there and she says, ""Look, this thing could even compose music if you told it a representation of music numerically."" So this is what I call Lovelace's Leap. When you say she's a programmer, she did do some, but the real thing is to have said the future is going to be much, much more than this. Now, a hundred years later, this guy comes along, Alan Turing, and in 1936, and invents the computer all over again. Now, of course, Babbage's machine was entirely mechanical. Turing's machine was entirely theoretical. Both of these guys were coming from a mathematical perspective, but Turing told us something very important. He laid down the mathematical foundations for computer science, and said, ""It doesn't matter how you make a computer."" It doesn't matter if your computer's mechanical, like Babbage's was, or electronic, like computers are today, or perhaps in the future, cells, or, again, mechanical again, once we get into nanotechnology. We could go back to Babbage's machine and just make it tiny. All those things are computers. There is in a sense a computing essence. This is called the Church–Turing thesis. And so suddenly, you get this link where you say this thing Babbage had built really was a computer. In fact, it was capable of doing everything we do today with computers, only really slowly. (Laughter) To give you an idea of how slowly, it had about 1k of memory. It used punch cards, which were being fed in, and it ran about 10,000 times slower the first ZX81. It did have a RAM pack. You could add on a lot of extra memory if you wanted to. (Laughter) So, where does that bring us today? So there are plans. Over in Swindon, the Science Museum archives, there are hundreds of plans and thousands of pages of notes written by Charles Babbage about this analytical engine. One of those is a set of plans that we call Plan 28, and that is also the name of a charity that I started with Doron Swade, who was the curator of computing at the Science Museum, and also the person who drove the project to build a difference engine, and our plan is to build it. Here in South Kensington, we will build the analytical engine. The project has a number of parts to it. One was the scanning of Babbage's archive. That's been done. The second is now the study of all of those plans to determine what to build. The third part is a computer simulation of that machine, and the last part is to physically build it at the Science Museum. When it's built, you'll finally be able to understand how a computer works, because rather than having a tiny chip in front of you, you've got to look at this humongous thing and say, ""Ah, I see the memory operating, I see the CPU operating, I hear it operating. I probably smell it operating."" (Laughter) But in between that we're going to do a simulation. Babbage himself wrote, he said, as soon as the analytical engine exists, it will surely guide the future course of science. Of course, he never built it, because he was always fiddling with new plans, but when it did get built, of course, in the 1940s, everything changed. Now, I'll just give you a little taste of what it looks like in motion with a video which shows just one part of the CPU mechanism working. So this is just three sets of cogs, and it's going to add. This is the adding mechanism in action, so you imagine this gigantic machine. So, give me five years. Before the 2030s happen, we'll have it. Thank you very much. (Applause)"	我今天要向大家介紹的這個機器被稱為有史以來最偉大的機器雖然目前它還沒被真的創造出來但它以後一定會被發明出來的這個機器在任何人發明電腦之前就被設計出來了 如果你對電腦的歷史有一些了解你就會知道，在30和40年代的時候一些電腦的雛型被創造出來接著誕生了我們今日的電腦革命你是對的不過你把發生的世紀搞錯了其實，第一台電腦是在19世紀的30和40年代，而不是20世紀的時發明的有人設計出這個機器，並做出部分原型有部分就是在這裡製造的也就是肯辛頓南部 這個機器是被Charles Babbage這個人做出來的我對Charles Babbage很感興趣因為他所有照片裡的頭髮都亂七八糟的像這樣，每張都是 (笑聲)他非常的富有而且可以說是英國的貴族成員在馬斯伯恩 (倫敦市區) 的一個週六夜晚如果你是一位當代的知識分子你就會被邀請到他家參加晚會他邀請了每個人—國王、惠靈頓的公爵、很多有名的人—-然後他會向你們展示他許多機械中的一個 我非常想念那個時代，你知道的，可以去參加晚會，然後看一個機械電腦在你面前被展示 (笑聲)不過Babbage是在18世紀末出生的而且還是個有名的數學家他主持了當初牛頓在劍橋主持的盛會這個盛會最近由史蒂芬霍金主持他沒這些人那麼有名，因為他只有創造這台機器的想法但卻從未真正創造出來 原因就是，他是個標準的書呆子每次他有很好的想法時他就會想：「太棒了，我要去把它做出來。我得投入一些錢... 阿，我又有個更好的主意那我來做這個吧 (笑聲) 然後我還要...」他一直重複這些想法，直到首相Sir Robert Peel把他從唐寧街10號 (首相官邸) 趕出去當時，從那裏被趕出去就意會著「先生，祝您有個愉快的一天。」 (笑聲) 他所設計的就是這個巨大的東西：分析引擎。現在，為了讓你有個初步的了解這是由上往下的俯視圖每個圈圈都是一個齒輪，一堆齒輪而這東西就跟一個蒸汽火車頭一樣大所以在我演講的過程中，我希望你能想像一下這個巨大的機器。我們可以想像我們正聽著這個機器有可能發出的美妙聲音現在，我將為各位介紹這個機器的搆造這就是為什麼「電腦系統搆造 (computer architechture)」是用英文中建築物 (architecture) 這個單字並為大家介紹這台機器，也就是電腦 首先，讓我們聊聊記憶體。這機器的記憶體就跟現在電腦的記憶體很像只不過它當時是用金屬打造成的一堆齒輪 — 總共有30個齒輪那麼高想像一下這些齒輪的高度成千上百個的齒輪每個齒輪上都有編號這個機器是十進位制的。所有東西都是十進位制他曾想過用二進位制，不過問題是如果用二進位制，機器就會變得過高看起來很荒謬，而且極其巨大它也有記憶體記憶體就是這裡的位元它們長這個樣子 這個巨大的東西就是CPU，或稱為晶片沒錯，就是這麼大整個機器完全都是機械化這是一張局部的CPU原型照片目前被存放在科學博物館 CPU可以做4種最基本的算數加、減、乘、除這對金屬來說已經很厲害了不過，它也可以做一些電腦可以、但計算機做不了的事情這個機器可以透過本身的記憶體做出決定它可以幫基本編程做假設而擁有這些功能，表示它就是一台電腦它可以計算、不光是算數，而且還可以做更多 現在，如果我們看著它，停下來想想我們今天的晶片，,我們根本沒辦法看見那些矽晶片的內部構造，它們實在太小了然而，如果你真的仔細研究它，你可以看到跟這個非常相似的東西這就是CPU裡令人屏息的複雜構造以及記憶體中不可思議的規律性如果你曾經看過一個電子顯微鏡照片你就會看到這個，它們看起來完全一樣然後這裡會有些十分複雜的位元 這裡所有的齒輪都在做一些電腦能做的事情當然，你得幫它寫程式而 Babbage 用了和當今一樣的方法而這個方法在50,60,70年代會再次出現也就是：打孔。這個東西就是三個讀卡機的其中一個而這是一個程式，目前存放在科學博物館離這兒不遠，是由 Charles Babbage 建造的它就在那裡，你可以去看看它等待著人們把機器創造出來事實上，這機器不僅僅只有一台，而是有很多他設計了一些程式，認為這個可以實現 之所以使用打孔卡片的原因是法國的 Jacquard 創造了織布機而織布機可以織出這些打孔卡片上不可思議的圖案所以他當時是在為今天的科技做準備就跟所有他做的其他事情一樣，他使用的是他當時19世紀30,40,50年代的科技：齒輪、蒸汽機器。很諷刺的是，跟 Charles Babbage同一年出生的有麥克法拉第那個用發電機、變壓器、和其他玩意兒改變了一切的那個傢伙Babbage 想要用當時現存的科技也就是就是蒸汽之類的東西 現在，他需要一些配件顯然電腦的雛型已經出來了你有很多卡片、CPU、以及記憶體但你還需要一些其他的配件但是你找不到 所以呢，首先你要有發出聲音的東西，像是鈴鐺如果任何事情搞砸了的話—— (笑聲)或者這機器需要一個人員陪同你就可以搖鈴鐺 (笑聲)在打孔卡片上其實有個說明寫著：「搖鈴鐺」。想像那「叮」的一聲讓我們暫停一下，想像這些聲音這台機器發出「喀喀喀喀」的聲音或是蒸汽引擎的聲音「叮」。沒錯吧？(笑聲) 很顯然，你還需要一個印表機，每個人都需要這個圖片是關於另外一個機器的列印原理它叫做「不同的2號引擎」他沒有把這個機器做出來，不過科學博物館在80和90年代真的做出來了它是個完全機械性的印表機它只能印數字，因為他對數字很著迷它確實可印在紙上，甚至可以自動換行所以當你打到一行結束，它就可以變成這樣 你還需要圖片，對吧？就是說，當你得處理一些關於圖片的事因此他說：「嗯，我需要個繪圖機。我有一大張紙還有鋼筆，這樣我就可以讓它作圖了。」因此他也設計了一個繪圖機你知道的，以那個時候的發展來說我認為他已經做出一個很好的機器了 接下來則要介紹這位女士，Ada Lovelace現在，想像一下這些晚會，聚集了有名利的人們而這位女士的父親就是瘋狂、陰險、又危險的拜倫王她的母親擔心她會繼承拜倫王那些又古怪又壞的行為於是就想：「我知道怎麼解決了：數學。我們會教她數學，這樣她就會安靜下來了。」(笑聲) 原因是因為從來沒有數學家最後會瘋掉所以，嗯，這個主意還不錯 (笑聲)一切不會有問題。所以她開始學習數學並跟她母親去了一個這樣的晚會Charles Babbage ，你知道的，拿出他的機器威靈頓的公爵也在場Charles 展示了他的機器而 Ada Lovelace 就理解了。她是他生命中唯一一個說出：「我知道這個機器的功用也理解這個機器的未來會怎麼樣」的人。她對我們帮助非常大，因為我們之所以能知道許多 Babbage 設計的機器都歸功於她 現在有些人稱她叫第一位程式設計者這其實是從她當初翻譯的一篇論文中節錄出來的這是一個以特定格式寫下的程式不過，正確來說她並不是真正的第一位程式設計者而且事實上，她做了更驚人的事不僅僅只是寫程式她看到了一些 Babbage 沒看到的東西 因為 Babbage 對數學太著迷了他想做一個能算數學的機器Lavelace 說：「這台機器不只可以算數。」就像在座的各位一樣大家此刻身上都有一台電腦也就是手機如果你打開你的手機，每個手機、電腦、或任何其他計算設備都是數學。運作的基礎都是數字不論是影片、簡訊、音樂、或聲音，都是數字全部。數學讓這一切成為可能而 Lovalace 說「雖然你在使用的是數學函數和數學符號但這並不表示這些東西就不能代表其他東西，例如音樂」這是個非常大的進展，因為 Babbage 還在說著「我們可以繪出這些神奇的函數、印出表格和數字，然後畫圖！」(笑聲)Lovalce 則說：「你看，這機器可以做出曲子，只要你給它用來代表音樂的數字代號這就是我所說的 Loavelace 大躍進若你稱她為程式設計者，她的確是不過真正重要的是她看見了這機器在未來能有更多可能性 而一百多年後，某個人出現了Alan Turing 在1936年重新發明了電腦當然，Babbage的機器是純機械的Turing 的機器是純理論的這兩人都是從數學的觀點來思考但 Turing 告訴我們一些很重要的事情他奠定了數學在電腦科學中的基礎，說到：「你怎麼把電腦創造出來的並不重要。」你的電腦是不是像Babbage那樣是純機械的，或者像今天這種電子的，都不重要也許未來的電腦是由細胞構成的或者又回歸到純機械的。一旦我們使用了奈米技術我們可以把 Babbage 的機器變得非常小。.所有東西都是電腦而在這之中，所有東西的本質都是計算這叫做 Church-Turing 理論 所以突然間，你會開始聯想到，Babbage 當年造的那東西，其實就是台電腦事實上，它可以做出任何我們現在用電腦能做的事情，只不過很慢 (笑聲)為了讓大家了解有多慢，以下是說明：它有1k的記憶體並且使用打孔卡，必需手動插進去它的速度比第一台ZX81 (家用電腦) 要慢一萬倍它確實有一個記憶體如果你想的話，你可以擴大它的存儲 (笑聲) 那麼，我們今天能做什麼呢?以下是計劃在Swindon 科學博物館的檔案中有上百個計劃和 上千頁文獻是 Charles Babbage 寫的、關於這個分析引擎的筆記其中有一系列計畫被我們稱作計劃28這也是個我與 Doron Swade 所創立的一個慈善機構的名字。Doron Swade 是科學博物館中管理電腦的成員，也是起草了這個計劃要建造出一個不一樣引擎的人我們的計劃就是把它做出來就在肯辛頓南部，我們會做出這個分析引擎 這個工程分成很多部分其中一部分就是掃描 Babbage 的文獻這部分已經完成，而正在進行的第二部份則是研讀所有計劃然後決定要建造什麼第三部分是一個模擬那機器的電腦糢擬系統最後一部份，就是在博物館中把機器做出來 當它完成時，你就會真正理解電腦是怎麼工作的因為你就不再只是盯著面前一個極小的晶片而是可以看看這個巨大的東西然後說：「阿，我看到記憶體在運作、CPU在運作、我聽見它運作的聲響。我說不定還聞的到！」 (笑聲)但在這之間呢，我們會做一個糢擬 Babbage 自己寫到：一旦分析引擎真的被製造出來後它一定會對於未來的科學有所帮助當然，他從沒有成功做出來，因為他總是在他的新計劃上浪費時間，但當這東西真的在1940年代被做出來時，一切都改變了 現在，我讓各位稍微看看它運作的樣子，這影片會展示出局部的CPU運作的機械原理這是三組齒輪它準備做加法。這是加法的運作原理如此一來，你可以想像這個巨大的機器 因此呢，給我五年時間在2030之前，我們將會做出這個機器 謝謝各位。 (鼓掌)
