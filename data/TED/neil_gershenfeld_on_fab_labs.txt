Talk	en	zh-tw
neil_gershenfeld_on_fab_labs	"This meeting has really been about a digital revolution, but I'd like to argue that it's done; we won. We've had a digital revolution but we don't need to keep having it. And I'd like to look after that, to look what comes after the digital revolution. So, let me start projecting forward. These are some projects I'm involved in today at MIT, looking what comes after computers. This first one, Internet Zero, up here — this is a web server that has the cost and complexity of an RFID tag — about a dollar — that can go in every light bulb and doorknob, and this is getting commercialized very quickly. And what's interesting about it isn't the cost; it's the way it encodes the Internet. It uses a kind of a Morse code for the Internet so you could send it optically; you can communicate acoustically through a power line, through RF. It takes the original principle of the Internet, which is inter-networking computers, and now lets devices inter-network. That we can take the whole idea that gave birth to the Internet and bring it down to the physical world in this Internet Zero, this internet of devices. So this is the next step from there to here, and this is getting commercialized today. A step after that is a project on fungible computers. Fungible goods in economics can be extended and traded. So, half as much grain is half as much useful, but half a baby or half a computer is less useful than a whole baby or a whole computer, and we've been trying to make computers that work that way. So, what you see in the background is a prototype. This was from a thesis of a student, Bill Butow, now at Intel, who wondered why, instead of making bigger and bigger chips, you don't make small chips, put them in a viscous medium, and pour out computing by the pound or by the square inch. And that's what you see here. On the left was postscript being rendered by a conventional computer; on the right is postscript being rendered from the first prototype we made, but there's no frame buffer, IO processor, any of that stuff — it's just this material. Unlike this screen where the dots are placed carefully, this is a raw material. If you add twice as much of it, you have twice as much display. If you shoot a gun through the middle, nothing happens. If you need more resource, you just apply more computer. So, that's the step after this — of computing as a raw material. That's still conventional bits, the step after that is — this is an earlier prototype in the lab; this is high-speed video slowed down. Now, integrating chemistry in computation, where the bits are bubbles. This is showing making bits, this is showing — once again, slowed down so you can see it, bits interacting to do logic and multiplexing and de-multiplexing. So, now we can compute that the output arranges material as well as information. And, ultimately, these are some slides from an early project I did, computing where the bits are stored quantum-mechanically in the nuclei of atoms, so programs rearrange the nuclear structure of molecules. All of these are in the lab pushing further and further and further, not as metaphor but literally integrating bits and atoms, and they lead to the following recognition. We all know we've had a digital revolution, but what is that? Well, Shannon took us, in the '40s, from here to here: from a telephone being a speaker wire that degraded with distance to the Internet. And he proved the first threshold theorem, that shows if you add information and remove it to a signal, you can compute perfectly with an imperfect device. And that's when we got the Internet. Von Neumann, in the '50s, did the same thing for computing; he showed you can have an unreliable computer but restore its state to make it perfect. This was the last great analog computer at MIT: a differential analyzer, and the more you ran it, the worse the answer got. After Von Neumann, we have the Pentium, where the billionth transistor is as reliable as the first one. But all our fabrication is down in this lower left corner. A state-of-the-art airplane factory rotating metal wax at fixed metal, or you maybe melt some plastic. A 10-billion-dollar chip fab uses a process a village artisan would recognize — you spread stuff around and bake it. All the intelligence is external to the system; the materials don't have information. Yesterday you heard about molecular biology, which fundamentally computes to build. It's an information processing system. We've had digital revolutions in communication and computation, but precisely the same idea, precisely the same math Shannon and Von Neuman did, hasn't yet come out to the physical world. So, inspired by that, colleagues in this program — the Center for Bits and Atoms at MIT — which is a group of people, like me, who never understood the boundary between physical science and computer science. I would even go further and say computer science is one of the worst things that ever happened to either computers or to science — (Laughter) — because the canon — computer science — many of them are great but the canon of computer science prematurely froze a model of computation based on technology that was available in 1950, and nature's a much more powerful computer than that. So, you'll hear, tomorrow, from Saul Griffith. He was one of the first students to emerge from this program. We started to figure out how you can compute to fabricate. This was just a proof of principle he did of tiles that interact magnetically, where you write a code, much like protein folding, that specifies their structure. So, there's no feedback to a tool metrology; the material itself codes for its structure in just the same ways that protein are fabricated. So, you can, for example, do that. You can do other things. That's in 2D. It works in 3D. The video on the upper right — I won't show for time — shows self-replication, templating so something can make something that can make something, and we're doing that now over, maybe, nine orders of magnitude. Those ideas have been used to show the best fidelity and direct rate DNA to make an organism, in functionalizing nanoclusters with peptide tails that code for their assembly — so, much like the magnets, but now on nanometer scales. Laser micro-machining: essentially 3D printers that digitally fabricate functional systems, all the way up to building buildings, not by having blueprints, but having the parts code for the structure of the building. So, these are early examples in the lab of emerging technologies to digitize fabrication. Computers that don't control tools but computers that are tools, where the output of a program rearranges atoms as well as bits. Now, to do that — with your tax dollars, thank you — I bought all these machines. We made a modest proposal to the NSF. We wanted to be able to make anything on any length scale, all in one place, because you can't segregate digital fabrication by a discipline or a length scale. So we put together focused nano beam writers and supersonic water jet cutters and excimer micro-machining systems. But I had a problem. Once I had all these machines, I was spending too much time teaching students to use them. So I started teaching a class, modestly called, ""How To Make Almost Anything."" And that wasn't meant to be provocative; it was just for a few research students. But the first day of class looked like this. You know, hundreds of people came in begging, all my life I've been waiting for this class; I'll do anything to do it. Then they'd ask, can you teach it at MIT? It seems too useful? And then the next — (Laughter) — surprising thing was they weren't there to do research. They were there because they wanted to make stuff. They had no conventional technical background. At the end of a semester they integrated their skills. I'll show an old video. Kelly was a sculptor, and this is what she did with her semester project. (Video): Kelly: Hi, I'm Kelly and this is my scream buddy. Do you ever find yourself in a situation where you really have to scream, but you can't because you're at work, or you're in a classroom, or you're watching your children, or you're in any number of situations where it's just not permitted? Well, scream buddy is a portable space for screaming. When a user screams into scream buddy, their scream is silenced. It is also recorded for later release where, when and how the user chooses. (Scream) (Laughter) (Applause) So, Einstein would like this. This student made a web browser for parrots — lets parrots surf the Net and talk to other parrots. This student's made an alarm clock you wrestle to prove you're awake; this is one that defends — a dress that defends your personal space. This isn't technology for communication; it's technology to prevent it. This is a device that lets you see your music. This is a student who made a machine that makes machines, and he made it by making Lego bricks that do the computing. Just year after year — and I finally realized the students were showing the killer app of personal fabrication is products for a market of one person. You don't need this for what you can get in Wal-Mart; you need this for what makes you unique. Ken Olsen famously said, nobody needs a computer in the home. But you don't use it for inventory and payroll; DEC is now twice bankrupt. You don't need personal fabrication in the home to buy what you can buy because you can buy it. You need it for what makes you unique, just like personalization. So, with that, in turn, 20 million dollars today does this; 20 years from now we'll make Star Trek replicators that make anything. The students hijacked all the machines I bought to do personal fabrication. Today, when you spend that much of your money, there's a government requirement to do outreach, which often means classes at a local school, a website — stuff that's just not that exciting. So, I made a deal with my NSF program managers that instead of talking about it, I'd give people the tools. This wasn't meant to be provocative or important, but we put together these Fab Labs. It's about 20,000 dollars in equipment that approximate both what the 20 million dollars does and where it's going. A laser cutter to do press-fit assembly with 3D from 2D, a sign cutter to plot in copper to do electromagnetics, a micron scale, numerically-controlled milling machine for precise structures, programming tools for less than a dollar, 100-nanosecond microcontrollers. It lets you work from microns and microseconds on up, and they exploded around the world. This wasn't scheduled, but they went from inner-city Boston to Pobal in India, to Secondi-Takoradi on Ghana's coast to Soshanguve in a township in South Africa, to the far north of Norway, uncovering, or helping uncover, for all the attention to the digital divide, we would find unused computers in all these places. A farmer in a rural village — a kid needs to measure and modify the world, not just get information about it on a screen. That there's really a fabrication and an instrumentation divide bigger than the digital divide. And the way you close it is not IT for the masses but IT development for the masses. So, in place after place we saw this same progression: that we'd open one of these Fab Labs, where we didn't — this is too crazy to think of. We didn't think this up, that we would get pulled to these places; we'd open it. The first step was just empowerment. You can see it in their face, just this joy of, I can do it. This is a girl in inner-city Boston who had just done a high-tech on-demand craft sale in the inner city community center. It goes on from there to serious hands-on technical education informally, out of schools. In Ghana we had set up one of these labs. We designed a network sensor, and kids would show up and refuse to leave the lab. There was a girl who insisted we stay late at night — (Video): Kids: I love the Fab Lab. — her first night in the lab because she was going to make the sensor. So she insisted on fabbing the board, learning how to stuff it, learning how to program it. She didn't really know what she was doing or why she was doing it, but she knew she just had to do it. There was something electric about it. This is late at, you know, 11 o'clock at night and I think I was the only person surprised when what she built worked the first time. And I've shown this to engineers at big companies, and they say they can't do this. Any one thing she's doing, they can do better, but it's distributed over many people and many sites and they can't do in an afternoon what this little girl in rural Ghana is doing. (Video): Girl: My name is Valentina Kofi; I am eight years old. I made a stacking board. And, again, that was just for the joy of it. Then these labs started doing serious problem solving — instrumentation for agriculture in India, steam turbines for energy conversion in Ghana, high-gain antennas in thin client computers. And then, in turn, businesses started to grow, like making these antennas. And finally, the lab started doing invention. We're learning more from them than we're giving them. I was showing my kids in a Fab Lab how to use it. They invented a way to do a construction kit out of a cardboard box — which, as you see up there, that's becoming a business — but their design was better than Saul's design at MIT, so there's now three students at MIT doing their theses on scaling the work of eight-year-old children because they had better designs. Real invention is happening in these labs. And I still kept — so, in the last year I've been spending time with heads of state and generals and tribal chiefs who all want this, and I keep saying, but this isn't the real thing. Wait, like, 20 years and then we'll be done. And I finally got what's been going on. This is Kernigan and Ritchie inventing UNIX on a PDP. PDPs came between mainframes and minicomputers. They were tens of thousands of dollars, hard to use, but they brought computing down to work groups, and everything we do today happened there. These Fab Labs are the cost and complexity of a PDP. The projection of digital fabrication isn't a projection for the future; we are now in the PDP era. We talked in hushed tones about the great discoveries then. It was very chaotic, it wasn't, sort of, clear what was going on. In the same sense we are now, today, in the minicomputer era of digital fabrication. The only problem with that is it breaks everybody's boundaries. In DC, I go to every agency that wants to talk, you know; in the Bay Area, I go to every organization you can think of — they all want to talk about it, but it breaks their organizational boundaries. In fact, it's illegal for them, in many cases, to equip ordinary people to create rather than consume technology. And that problem is so severe that the ultimate invention coming from this community surprised me: it's the social engineering. That the lab in far north of Norway — this is so far north its satellite dishes look at the ground rather than the sky because that's where the satellites are — the lab outgrew the little barn that it was in. It was there because they wanted to find animals in the mountains but it outgrew it, so they built this extraordinary village for the lab. This isn't a university; it's not a company. It's essentially a village for invention; it's a village for the outliers in society, and those have been growing up around these Fab Labs all around the world. So this program has split into an NGO foundation, a Fab Foundation to support the scaling, a micro VC fund. The person who runs it nicely describes it as ""machines that make machines need businesses that make businesses:"" it's a cross between micro-finance and VC to do fan-out, and then the research partnerships back at MIT for what's making it possible. So I'd like to leave you with two thoughts. There's been a sea change in aid, from top-down mega-projects to bottom-up, grassroots, micro-finance investing in the roots, so that everybody's got that that's what works. But we still look at technology as top-down mega-projects. Computing, communication, energy for the rest of the planet are these top-down mega-projects. If this room full of heroes is just clever enough, you can solve the problems. The message coming from the Fab Labs is that the other five billion people on the planet aren't just technical sinks; they're sources. The real opportunity is to harness the inventive power of the world to locally design and produce solutions to local problems. I thought that's the projection 20 years hence into the future, but it's where we are today. It breaks every organizational boundary we can think of. The hardest thing at this point is the social engineering and the organizational engineering, but it's here today. And, finally, any talk like this on the future of computing is required to show Moore's law, but my favorite version — this is Gordon Moore's original one from his original paper — and what's happened is, year after year after year, we've scaled and we've scaled and we've scaled and we've scaled, and we've scaled and we've scaled, and we've scaled and we've scaled, and there's this looming bug of what's going to happen at the end of Moore's law; this ultimate bug is coming. But we're coming to appreciate, is the transition from 2D to 3D, from programming bits to programming atoms, turns the ends of Moore's law scaling from the ultimate bug to the ultimate feature. So, we're just at the edge of this digital revolution in fabrication, where the output of computation programs the physical world. So, together, these two projects answer questions I hadn't asked carefully. The class at MIT shows the killer app for personal fabrication in the developed world is technology for a market of one: personal expression in technology that touches a passion unlike anything I've seen in technology for a very long time. And the killer app for the rest of the planet is the instrumentation and the fabrication divide: people locally developing solutions to local problems. Thank you."	"這個會議其實與數位革命有關。我想說的是,這個數位革命已經結束;我們已經贏得勝仗。我們已經過這場數位革命,但我們不需要再持續下去。而我想藉此鑑往知來,看看什麼又會發生在這個數位革命之後。所以,讓我開始在此前瞻未來。這些是我在麻省理工學院(MIT)所參與進行的計畫,看看在電腦時代之後的發展。 首先,上面這個是-網際網路0 — 這是一個網路伺服器。這個網路伺服器的造價與複雜程度如同一個電子標籤(RFID) —大約是一元(美金) — 就像是一個電燈泡或是一個門把。而這個產品能很快的被商品化。但真正有趣的並不是它的造價;而是它如何編碼網際網路。它使用的是一種摩斯密碼來編碼網際網路。所以如果用光纖;就可以從聽覺的方式溝通從聽覺的方式溝通這是透過最原初網際網路的理論,也就是相互聯結成網路的電腦,然後將這些機件聯繫成網絡。於是我們可將這整個被運用到網際網路的誕生的概念帶到真實世界裡的網際網路0,機件之間的網際網路。 所以這就是帶我們從那裡到這裡的下一步,今日也被商品化。在這之後的下一步是一個關於可替代性電腦的計畫。在經濟學裡可替代性的物品能被延伸或交易。所以,一半的穀物有一半的價值,但是比方說一半的嬰兒或是一半的電腦卻無法比一個完整的嬰兒或是完整的電腦有用,而我們試著讓電腦這樣運作。所以,你在背景裡看到的是一個原型。這是來自於一名學生, Bill Butow的論文,他目前在英特爾(Intel)工作,Bill Butow思考的是, 與其製作越來越大的晶片,為什麼不製作小型的晶片,把他們放在黏性媒質,然後電算以磅或是平方英吋生產。這就是你現在這裡看到的。左邊這裡是用傳統電腦計算出來的postscript,而右邊這裡則是用我們製作的第一個原型機組計算出來的但是我們只製造材料,沒有帧缓存器或是IO處理器之類的東西— 這些都只是原料。不像螢幕上這些點都刻意均勻的分布,這是一種原材料。如果你加上兩倍數量的材料,呈現出的也會得到兩倍的數量。如果有子彈穿過它的中心,也不會有事。如果你需要更多的資源,你只需要加上更多的電腦。 所以這就是之後的下一步 — 將電腦計算視為一種原料。這仍然是傳統的計算,而在這之後的下一步 —這是一個早期在實驗室裡的原型,這是高速的影像被減慢。現在化學融合在電腦計算,在這裡,所有的電位(bits)都變成泡沫。這裡呈現的是電位的構成, 在這裡 —再重複一次,這是慢動作影片,所以你可以看見,電位以互動的方式邏輯運作以及進行多路運算以及分離多路運算。所以,現在我們可以依規則計算輸出的物料的排列也能依此計算訊息排列。最後,這裡是一個我早期做的提案報告計算電位以量子的型式被儲存在原子核裡,所以這樣使分子裡的原子結構重新安排。這些都在實驗室裡被推展的越來越遠,這並不是個比喻,而是真正的把電位跟原子結合在一起,接著他們引導到以下的結論。 我們都知道我們已經有了一個數字的革命,但是那就究竟是什麼?夏濃在40年代,帶領我們從這裡進步到這裡:從還是一個隨著距離增加而信號減弱的電話線到網際網路。他證明第一個定理,呈現了如果你加入訊息並且將它簡化成訊號,你可以用一個不完美的裝置做到完美的計算。而接著我們來到了網路時代。馮.紐曼在五零年代時也做了同樣的事;他證明了你可以用一個不甚精確的電腦,卻可以重組它的狀態讓他變得沒有瑕疵。這是在MIT最後一個很棒的類比式電腦:一個差異性的分析器,你在上面運作越多,得到的答案越不準確。 在馮.紐曼之後,我們有了奔騰,讓第十億個晶體管跟第一個一樣可靠。但所有我們的製作都在左下方這裡。一個頂級的飛機工廠透過旋轉金屬鑄作固定形狀,或者你可以融化一些塑料。一個百億元的晶片工廠利用一個連村落工匠都理解的方法—你將物料鋪散然後加熱。所有的智能都存在系統之外;材料本身並不含訊息。昨天你聽到分子生物學,基本上也就是根據計算來件造的。它就是訊息計算系統。我們已經經歷過在傳播以及電算上的數位革命ˋ但是以一模一樣的點子,一模一樣的數學計算方式夏儂跟馮.紐曼做到的,還沒有在真實的物理世界實現。所以,在這啓發之下,在麻省理工學院電位與原子中心(Center for Bits and Atoms)裡的同事—也就是一群像我一樣的人,從來不知道在物理科學及電腦科學的領域裡有任何的界限我甚至會說電腦科學的發生,是對於電腦或是科學發生過最糟的事—(觀眾笑聲)—因為這些電腦科學裡的經典—很多都很好,但這些電腦科學的教條根據1950年代科技而發展的計算模式都先決的提供了限制,然而大自然是一個比這系統更強大的電腦。 所以明天你會聽到薩爾.葛力菲司的演講。他就是其中一個這個中心的第一個學生。我們開始瞭解如何藉電算去製造。這是一個他早先製作的樣品證明他的基本原則這些方塊在磁力運作下互相產生作用,你可以寫一個編碼,就像是蛋白質摺疊,如此可定義它們的結構。所以,這裡不含工具計量學的計算,這個原料本身為它的結構同樣的進行自行建構跟蛋白質的建構一樣。所以像這個例子你就可以這麼做。你可以做其他的事。這是2D,在3D裡也同樣可行。這個在右上方的影片—因為時間的關係,我不會播放—這個影片表現了自行複製,跟模型建構,如此之類可以從這件製作到別件東西的例子,而我們現在可以做到,大概,九級數量的重疊。這些例子被用以展現了DNA可有效的直接被製成有機體,也可以有效透過肽尾巴激活奈米群透過編碼完成組構。所以就像磁鐵,但現在是在奈米尺度。雷射微對準器:其實也是可以透過電子製造運作系統的3D印刷機甚至可以建造出建築物,不需透過藍圖,而是透過每個建築區域結構的編碼。 所以這就是早期在實驗市裡不斷演進的數位製造的科技先例。電腦不控制工具而是成為工具本身,讓程序的輸出重組原子以及電位。現在,用納稅人的錢,謝謝你們—我買了這些機器。我們向國家科學基金會(NSF)寫了一個很簡單的企劃書我們希望可以製造任意尺寸的任意物,一次完成,因為你無法將數位的製作局限於某種原則或某種尺寸。所以我們找來將聚焦奈米束的切割機還有超聲波水壓切割機以及微對準機。 但我碰到一個問題。一但我有了這些機器,我花太多時間教學生怎麼用它們。所以我開始教一堂叫""如何製作任何東西""的課。但這主要的目的並不是要刻意的表現,這只是為了一些研究的學生。但課堂的一開始就像這樣你可以想像,上百的學生前來,我一直想要開這樣的課,我會做任何的事完成它。然後他們問,你可以在MIT教這堂課嗎?這堂課看起來太實用了。然後接著 —(觀眾笑聲)意外的是,他們上這堂課並不是為了做研究。他們上這堂課室為了製作東西。他們沒有傳統的技術背景。但在這堂課的最後他們結合了他們的技術。 我會播一段舊影片。這是凱莉,她是一位雕塑家,而這個是她做的學期計畫。 (影片):凱莉:大家好,我是凱莉,而這是我的大叫夥伴。你是否曾經體驗過一種真的很想大叫,但是你不行,因為你正在工作或是在教室裡,或是你正在照顧孩子,或是你正在任何一種不允許的情況中?大叫夥伴是一個可以隨身攜帶的空間,當使用者對著它大叫,他的叫聲會被消減掉。它並且會將聲音錄下,當作之後在別的地點,時間,方式播放,根據使用者的選擇。(大叫)(笑聲)(掌聲) 所以愛因斯坦應該會喜歡這個。這個學生製作了一個讓鸚鵡使用的網頁—讓鸚鵡可以上網跟其他鸚鵡交談。這個學生做了一個跟你摔角的鬧鐘來證明你是醒的,而這個是一件保衛你私人空間的衣服。這不是藉由科技進行溝通;而是相反的。這是一個可以讓你看見自己的音樂的儀器。這是一個學生,他製作了一個可以製作機器的機器,然後他使這個機器讓樂高積木做電腦運算。一年又一年—我終於瞭解這些學生所表現的是極度的個人化的製作就像是為個人所製作的產品。你沒辦法在Walmark買到這個,你只能在這裡得到獨特的東西。Ken Olsen曾說過一句有名的話,沒有人需要電腦在家裡。但你不用電腦做存貨或記帳;不用在家裡做個人性的電腦去購買你在哪裡都可以買到的東西。你需要這樣做是因為你想要獨特性的,就像是個人化專屬的特性。所以,今天兩千萬(美金)價值可以讓你做這些,20年後,我們可以製造星際戰艦電影(Star Trek)裡的複製器,並使它製造任何東西。之後我的學生直接截取了我買的所有機器,用來做個人化的製造。 今天,當你花了那麼多的錢,政府要求你要進行推廣,也就是說在當地學校進行教學,一個網站;就是一些不太讓人興奮的東西。所以我跟我的國家科學基金會的經理人談了一個條件,就是說,與其講學,我會給人們這個工具。這並不是要為了要彰顯重要性,但是我們成立了這些Fab Lab實驗室。以大概是兩萬元(美元)的設備差不多是兩千萬(美元)機器也同樣做到的事情。一臺雷射切割機用來做從2D變成3D的重組,一個可以運作電磁力的符號切割機,一臺微測量計,以及一臺數字控制的削磨機用來製作精確的組織,還有一些低於一元美金的工具,一個100奈米秒的微控制器。這些讓你可以用在從微米到到更大的單位,而這些正迅速的在全世界普遍開來。這並不是我們事前計畫的,但是這個企劃從波士頓中心發展到印度的Pobal,迦納海岸的Secondi-Takoradi也到南非的Soshanguve,向北遠至挪威,去發掘,或幫助發掘,對於數位科技關注的差距,我們從各地找到沒有用的電腦。從農村裡的農夫,到一個需要測量及渴望改變世界的孩子,讓他們不只是從螢幕中學習。我們發覺的確有一個製造與工具運用的差距大於數位科技的差異。而由此所得到的,不是利於大眾的電腦資訊,而是利於大眾的電腦資訊發展。 所以每到一個地方我們看到同樣程度的進展:我們在一些之前沒有想過的地方開了這些實驗室—這樣的想法真的是太瘋狂。我們之前並沒有想到在這些地方發展而是被這些當地人所吸引過去的。第一步只是賦予人們權力。為了看到當地人臉上喜悅的表情,我可以持續做下去。這是一個住在波士頓(Boston)女孩,她剛在市中心民眾中心完成一個高科技基於需求供應的工藝品銷售機置。從這個例子到真正的學校科技教學到不正式的校外教學。在迦納我們也已經設置好這些實驗室。我們設好這些實驗室網路感應器,而這些孩子們會到這裡來並且不想離開。有個女孩甚至堅持要我們留到晚上—(影片): 孩子們:我愛這個Fab Lab實驗室。—這是她的第一個在實驗室的晚上,因為她想做一個感應器。所以她堅持要學習怎麼做,學習怎麼編碼。她並不知道她在做什麼或者為什麼而做,但是她知道♪她只想要完成它。有什麼令她興奮的事情吸引著她。這是晚上11點而我想我是唯一一個很驚喜的看到她造出的成品第一次有效的作用了。而我也將這個給其他在大公司的工程師看,他們說他們沒辦法做。所有任何一件女孩做的事,他們可以把它做的更好,但是得透過許多人許多地方的努力他們也沒辦法在一個下午做好這個迦納的小女孩所做到的。(影片):女孩:我的名字是華崙蒂那柯菲,我今年八歲。我做了一個疊製板。再次說明,這都是純粹為了那份喜悅。 然後這些實驗室開始作一些正式解決問題的計畫—比如說為印度的農業製作儀器,在迦納生產能源轉換的蒸氣輪,為客端電腦製作高效率的天線,然後,隨之而來的,我們的生意契機也開始成長了,就像製作這些天線。最後這個實驗室也開始進行發明。我們從他們學習到的比我們教他們的還多。我在教這些實驗室的孩子怎麼用。他們發現了一個怎麼從紙箱做一個工具組的方法—你從這上面可以看到,這就是生意怎麼開始的—但是他們的設計比在麻省理工學院的薩爾製作的還好,所以現在有三個MIT的學生正在寫關於這個八歲孩子作品的論文因為這些孩子的作品比他們的更好。真正的發明在這些實驗事裡發生。 但我持續著—我去年花一些時間跟一些想要這個計畫的政府要員跟部落的領袖討論,我一直告訴他們,這不是真正的成品。20年後,我們會有真正的成果。然後我終於了解到底會發生什麼事。這是Kernigan與Ritchie在PDP上發明了UNIX操作界面。在當時PDP是從介於大型跟迷你電腦而來的。造價好幾萬美元,而且難以使用,但他們將電腦計算帶到實驗室,所以我們現在做的事情都在這裡發生。這些Fab Lab實驗室的造價與複雜程度就像PDP。數位製造的本身並不是未來;我們現在所在的是PDP的時代。我們隱約談到了當時偉大的發明。當時一切是很混亂的,我們不是很清楚當時到底發生了什麼事。就像我們現在,今天,我們在微型電腦數位製造的時代。這產生的唯一問題是因此打開了所有人的界限。 在美國華盛頓特區(DC),我讓每個機關都想來找我談。在舊金山海灣區(Bay Area),我跟每一個你可以想到的公司談。他們都想開始對此開始探討,但是這就違背了公司之間的疆界。而事實上這對他們來說,有很多的例子之中,讓平常人可以有辦法創造而不是去作為一個科技的消費者,是件違法的事情。而這個問題嚴重到以致於來自於一個社區的最重大發明深深的讓我驚奇:這個發明顯現了社會工程。它發生在挪威北方的一個實驗室—因為位置在太偏遠的北方,以致於衛星系統的設置是朝向地面而不是朝向天空,因為那才是所有衛星的所在—這個實驗室最後規模還大於原先所在的一個小農屋。一開始他們是希望要找到山裡的動物但最後規模卻逐漸擴大,於是他們為了這個實驗室建了一個村落。這不是一所大學,也不是一家公司;它本質上是個為了創造而建的村落,村落裡都是社會上很突出的人,這樣的事情也在各地的Fab Lab實驗室發生全世界都有。 所以我們現在把這個計畫成立為一個NGO的機構,叫做Fab機構以一個風險投資基金支持它現在的規模。負責這個計畫的人把它巧妙的形容作就像這台製造機器的機器,我們是一個生意來創造生意:這是一個介於微貸款以及風險投資的整合,然後再將研究的計畫推回至MIT,以實現計畫。 所以我想藉此提供你兩的想法。我們看到一個在經援上的巨大改變,上由大型計畫到小的草根的微貸投資,所以這樣讓每個人都在其中,就是這樣才成功的。但是我們仍然將科技視為由上至下的巨型計畫。電腦,傳播,整個地球的能源都是巨型的計畫。如果這整個房間都是聰明人,你們可以想到解決的辦法。從Fab Lab實驗室來的想法是,這地球上的五億人口並不懂得科技;但他們是最好的資源。真正的機會存在於培養創造的能力將設計的能力在當地發展,以解決當地的問題。我想這是從現在到未來20年後的發展,但這是我們今天處在的位置。這打破了每個機構性的疆界。這就是當下對於社會建設工程以組織建設工程最困難的事情但這問題就在那裡。 最後,任何關於未來電腦趨勢的演講都需要提到莫耳定律( Moore's law),但我最喜歡的—就是高登.莫耳(Gordon Moore)原版—而且多年以來,我們成長再成長,成長再成長,再成長而這就是在將來隱約可見的臭蟲,在莫耳定律的最後,這個臭蟲會來臨。但是我們會懂得欣賞的,是從2D轉變到3D,從計算數位,到原子到計算莫耳定律最末端的巨蟲到最終的功能。所以,我們只是在這個數位革命的邊緣進行製造進化將電腦程式最後的演算結果呈現在真實的世界。所以以上這兩個計畫回答了我還沒有提到的兩個問題。這堂在MIT的教學所呈現的是在發展中國家,為個人化所設的製造,其實就是個人化的商品:個人化的在科技上的闡述與人們的熱情是我在科技領域裡很久沒有看到的。而這個殺手級的應用程式對於這地球其他的地方,則是減少製作儀器以及製作本身的距離:人們可以真的藉此解決他們當地的問題謝謝。"
