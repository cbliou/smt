Talk	en	zh-tw
saul_griffith_on_everyday_inventions	"So anyway, who am I? I usually say to people, when they say, ""What do you do?"" I say, ""I do hardware,"" because it sort of conveniently encompasses everything I do. And I recently said that to a venture capitalist casually at some Valley event, to which he replied, ""How quaint."" (Laughter) And I sort of really was dumbstruck. And I really should have said something smart. And now I've had a little bit of time to think about it, I would have said, ""Well, you know, if we look at the next 100 years and we've seen all these problems in the last few days, most of the big issues — clean water, clean energy — and they're interchangeable in some respects — and cleaner, more functional materials — they all look to me to be hardware problems. This doesn't mean we should ignore software, or information, or computation."" And that's in fact probably what I'm going to try and tell you about. So, this talk is going to be about how do we make things and what are the new ways that we're going to make things in the future. Now, TED sends you a lot of spam if you're a speaker about ""do this, do that"" and you fill out all these forms, and you don't actually know how they're going to describe you, and it flashed across my desk that they were going to introduce me as a futurist. And I've always been nervous about the term ""futurist,"" because you seem doomed to failure because you can't really predict it. And I was laughing about this with the very smart colleagues I have, and said, ""You know, well, if I have to talk about the future, what is it?"" And George Homsey, a great guy, said, ""Oh, the future is amazing. It is so much stranger than you think. We're going to reprogram the bacteria in your gut, and we're going to make your poo smell like peppermint."" (Laughter) So, you may think that's sort of really crazy, but there are some pretty amazing things that are happening that make this possible. So, this isn't my work, but it's work of good friends of mine at MIT. This is called the registry of standard biological parts. This is headed by Drew Endy and Tom Knight and a few other very, very bright individuals. Basically, what they're doing is looking at biology as a programmable system. Literally, think of proteins as subroutines that you can string together to execute a program. Now, this is actually becoming such an interesting idea. This is a state diagram. That's an extremely simple computer. This one is a two-bit counter. So that's essentially the computational equivalent of two light switches. And this is being built by a group of students at Zurich for a design competition in biology. And from the results of the same competition last year, a University of Texas team of students programmed bacteria so that they can detect light and switch on and off. So this is interesting in the sense that you can now do ""if-then-for"" statements in materials, in structure. This is a pretty interesting trend, because we used to live in a world where everyone's said glibly, ""Form follows function,"" but I think I've sort of grown up in a world — you listened to Neil Gershenfeld yesterday; I was in a lab associated with his — where it's really a world where information defines form and function. I spent six years thinking about that, but to show you the power of art over science — this is actually one of the cartoons I write. These are called ""HowToons."" I work with a fabulous illustrator called Nick Dragotta. Took me six years at MIT, and about that many pages to describe what I was doing, and it took him one page. And so this is our muse Tucker. He's an interesting little kid — and his sister, Celine — and what he's doing here is observing the self-assembly of his Cheerios in his cereal bowl. And in fact you can program the self-assembly of things, so he starts chocolate-dipping edges, changing the hydrophobicity and the hydrophylicity. In theory, if you program those sufficiently, you should be able to do something pretty interesting and make a very complex structure. In this case, he's done self-replication of a complex 3D structure. And that's what I thought about for a long time, because this is how we currently make things. This is a silicon wafer, and essentially that's just a whole bunch of layers of two-dimensional stuff, sort of layered up. The feature side is — you know, people will say, [unclear] down around about 65 nanometers now. On the right, that's a radiolara. That's a unicellular organism ubiquitous in the oceans. And that has feature sizes down to about 20 nanometers, and it's a complex 3D structure. We could do a lot more with computers and things generally if we knew how to build things this way. The secret to biology is, it builds computation into the way it makes things. So this little thing here, polymerase, is essentially a supercomputer designed for replicating DNA. And the ribosome here is another little computer that helps in the translation of the proteins. I thought about this in the sense that it's great to build in biological materials, but can we do similar things? Can we get self-replicating-type behavior? Can we get complex 3D structure automatically assembling in inorganic systems? Because there are some advantages to inorganic systems, like higher speed semiconductors, etc. So, this is some of my work on how do you do an autonomously self-replicating system. And this is sort of Babbage's revenge. These are little mechanical computers. These are five-state state machines. So, that's about three light switches lined up. In a neutral state, they won't bind at all. Now, if I make a string of these, a bit string, they will be able to replicate. So we start with white, blue, blue, white. That encodes; that will now copy. From one comes two, and then from two comes three. And so you've got this sort of replicating system. It was work actually by Lionel Penrose, father of Roger Penrose, the tiles guy. He did a lot of this work in the '60s, and so a lot of this logic theory lay fallow as we went down the digital computer revolution, but it's now coming back. So now I'm going to show you the hands-free, autonomous self-replication. So we've tracked in the video the input string, which was green, green, yellow, yellow, green. We set them off on this air hockey table. You know, high science uses air hockey tables — (Laughter) — and if you watch this thing long enough you get dizzy, but what you're actually seeing is copies of that original string emerging from the parts bin that you have here. So we've got autonomous replication of bit strings. So, why would you want to replicate bit strings? Well, it turns out biology has this other very interesting meme, that you can take a linear string, which is a convenient thing to copy, and you can fold that into an arbitrarily complex 3D structure. So I was trying to, you know, take the engineer's version: Can we build a mechanical system in inorganic materials that will do the same thing? So what I'm showing you here is that we can make a 2D shape — the B — assemble from a string of components that follow extremely simple rules. And the whole point of going with the extremely simple rules here, and the incredibly simple state machines in the previous design, was that you don't need digital logic to do computation. And that way you can scale things much smaller than microchips. So you can literally use these as the tiny components in the assembly process. So, Neil Gershenfeld showed you this video on Wednesday, I believe, but I'll show you again. This is literally the colored sequence of those tiles. Each different color has a different magnetic polarity, and the sequence is uniquely specifying the structure that is coming out. Now, hopefully, those of you who know anything about graph theory can look at that, and that will satisfy you that that can also do arbitrary 3D structure, and in fact, you know, I can now take a dog, carve it up and then reassemble it so it's a linear string that will fold from a sequence. And now I can actually define that three-dimensional object as a sequence of bits. So, you know, it's a pretty interesting world when you start looking at the world a little bit differently. And the universe is now a compiler. And so I'm thinking about, you know, what are the programs for programming the physical universe? And how do we think about materials and structure, sort of as an information and computation problem? Not just where you attach a micro-controller to the end point, but that the structure and the mechanisms are the logic, are the computers. Having totally absorbed this philosophy, I started looking at a lot of problems a little differently. With the universe as a computer, you can look at this droplet of water as having performed the computations. You set a couple of boundary conditions, like gravity, the surface tension, density, etc., and then you press ""execute,"" and magically, the universe produces you a perfect ball lens. So, this actually applied to the problem of — so there's a half a billion to a billion people in the world don't have access to cheap eyeglasses. So can you make a machine that could make any prescription lens very quickly on site? This is a machine where you literally define a boundary condition. If it's circular, you make a spherical lens. If it's elliptical, you can make an astigmatic lens. You then put a membrane on that and you apply pressure — so that's part of the extra program. And literally with only those two inputs — so, the shape of your boundary condition and the pressure — you can define an infinite number of lenses that cover the range of human refractive error, from minus 12 to plus eight diopters, up to four diopters of cylinder. And then literally, you now pour on a monomer. You know, I'll do a Julia Childs here. This is three minutes of UV light. And you reverse the pressure on your membrane once you've cooked it. Pop it out. I've seen this video, but I still don't know if it's going to end right. (Laughter) So you reverse this. This is a very old movie, so with the new prototypes, actually both surfaces are flexible, but this will show you the point. Now you've finished the lens, you literally pop it out. That's next year's Yves Klein, you know, eyeglasses shape. And you can see that that has a mild prescription of about minus two diopters. And as I rotate it against this side shot, you'll see that that has cylinder, and that was programmed in — literally into the physics of the system. So, this sort of thinking about structure as computation and structure as information leads to other things, like this. This is something that my people at SQUID Labs are working on at the moment, called ""electronic rope."" So literally, you think about a rope. It has very complex structure in the weave. And under no load, it's one structure. Under a different load, it's a different structure. And you can actually exploit that by putting in a very small number of conducting fibers to actually make it a sensor. So this is now a rope that knows the load on the rope at any particular point in the rope. Just by thinking about the physics of the world, materials as the computer, you can start to do things like this. I'm going to segue a little here. I guess I'm just going to casually tell you the types of things that I think about with this. One thing I'm really interested about this right now is, how, if you're really taking this view of the universe as a computer, how do we make things in a very general sense, and how might we share the way we make things in a general sense the same way you share open source hardware? And a lot of talks here have espoused the benefits of having lots of people look at problems, share the information and work on those things together. So, a convenient thing about being a human is you move in linear time, and unless Lisa Randall changes that, we'll continue to move in linear time. So that means anything you do, or anything you make, you produce a sequence of steps — and I think Lego in the '70s nailed this, and they did it most elegantly. But they can show you how to build things in sequence. So, I'm thinking about, how can we generalize the way we make all sorts of things, so you end up with this sort of guy, right? And I think this applies across a very broad — sort of, a lot of concepts. You know, Cameron Sinclair yesterday said, ""How do I get everyone to collaborate on design globally to do housing for humanity?"" And if you've seen Amy Smith, she talks about how you get students at MIT to work with communities in Haiti. And I think we have to sort of redefine and rethink how we define structure and materials and assembly things, so that we can really share the information on how you do those things in a more profound way and build on each other's source code for structure. I don't know exactly how to do this yet, but, you know, it's something being actively thought about. So, you know, that leads to questions like, is this a compiler? Is this a sub-routine? Interesting things like that. Maybe I'm getting a little too abstract, but you know, this is the sort of — returning to our comic characters — this is sort of the universe, or a different universe view, that I think is going to be very prevalent in the future — from biotech to materials assembly. It was great to hear Bill Joy. They're starting to invest in materials science, but these are the new things in materials science. How do we put real information and real structure into new ideas, and see the world in a different way? And it's not going to be binary code that defines the computers of the universe — it's sort of an analog computer. But it's definitely an interesting new worldview. I've gone too far. So that sounds like it's it. I've probably got a couple of minutes of questions, or I can show — I think they also said that I do extreme stuff in the introduction, so I may have to explain that. So maybe I'll do that with this short video. So this is actually a 3,000-square-foot kite, which also happens to be a minimal energy surface. So returning to the droplet, again, thinking about the universe in a new way. This is a kite designed by a guy called Dave Kulp. And why do you want a 3,000-square-foot kite? So that's a kite the size of your house. And so you want that to tow boats very fast. So I've been working on this a little, also, with a couple of other guys. But, you know, this is another way to look at the — if you abstract again, this is a structure that is defined by the physics of the universe. You could just hang it as a bed sheet, but again, the computation of all the physics gives you the aerodynamic shape. And so you can actually sort of almost double your boat speed with systems like that. So that's sort of another interesting aspect of the future. (Applause)"	"好，我是誰。當他們問我「你是做什麼的?」，我通常會這樣回應我說:「我是做硬體的。」因為這樣很方便地涵括了我做的每一個東西。而且，我最近在一個矽谷會議上就是這樣隨意地跟一個風險資本家說的。他則回答:「好奇怪。」 笑聲 我當時真的有些傻住了。我當時真該說點聰明的。現在我有一些時間去想想我應該這麼說:如果我們看未來的一百年，而我們在過去那幾天看到了這些問題，大部分這些重大議題，例如: 潔淨的飲水，潔淨的能源，這兩者在某種程度上是可以相互替換的，且是更乾淨，更有功能的材料，他們對我來說都是硬體的問題。這不代表我們應該忽視軟體，或資訊或計算。這事實上就是我接著要講的。 所以，這演講是關於我們如何做東西，以及我們將來有那些製造東西的新方法。現在，如果你是演講者，TED會寄給你一堆郵件要你去做這個做那個，要你填一大堆表格而事實上你並不知道他們將如何描述你我剛剛才想到他們將把我描述成未來學家。談到未來學家這個詞我總是感到緊張由於未來是不可預測的，所以你似乎註定失敗。關於這個我和我聰明的同事們都一起笑了，接著說:「如果我必須談論未來，那未來是什麼?」我的同事George Homsey，一個很聰明的傢伙，他說:「未來很美好的比你想像的還要更美好。我們將給在你腸子內的細菌重新排列我們將讓你的大便聞起來像薄荷。」 （笑聲） 你們可能覺得那真的非常瘋狂但是有一些神奇的新發明使得那樣的事可能成真。這不是我的作品，是我在MIT的好朋友的作品。這叫標準生物零件組。這是由Drew Endy和Tom Knight主導的，還有一些其他非常非常優秀的人也參加。基本上，他們所做的是把生物學看做是一個可程式化的系統。把蛋白質想成是個副程式你可以把一些副程式組合成一個可執行的程式。現在，這變成一個相當有趣的想法。這是一個狀態圖。它是一部很簡單的電腦。 這是個雙位元的計算器。或從計算的角度來說，相當是兩個燈的開關。這是在一個生物設計競賽中由一群瑞士的學生製成的。在去年相同比賽的結果中德州大學的學生給細菌寫入程式使得細菌可以感應燈光並且可以開燈和關燈。這在某程度上相當有趣將if then for的陳述句導入材料中、結構中將會是一個很有趣的趨勢。因為我們以前所生活的世界是一個模糊的世界，先有功能後有形態，但我相信我成長在一個像你昨天聽到Neil Gershenfeld描述的世界。我在一個和他有關的實驗室，在那裡是一個用資訊來定義形態和功能的世界。 我花了六年的時間來想但要現在給你們看藝術的力量如何發揮在科學上。這是我畫的一部漫畫。它們叫做""好圖""我和一個叫做Nick Dragotta的優秀漫畫家工作。我在MIT待了六年，必須用很多篇幅來描述我那時做的事但他只用一頁漫畫就夠了。Tucker是我們的靈感來源。他是一個很有趣的小孩，還有他姊姊Celine他在這裡做的事，是去觀察在他碗裡的燕麥圈自行組合的過程。事實上你可以透過寫程式來控制物品自行組合的過程於是他從沾巧克力的燕麥圈開始做改變其耐水性及抗水性。理論上，只要你的程式夠完整你可以做出很有趣的東西還有很複雜的結構。在這裡，他做出可自行複製複雜的三維結構。我思考很久的正是這個，因為這是我們目前做東西的方法。這是一個矽晶片，而本質上，是數層二維的東西堆積起來。大部分的人認爲重要的特徵為厚度是65奈米。 右邊是一個放射蟲它是一種在海洋中大量存在的單細胞生物。而它的直徑為20奈米，是個複雜的三維結構。如果我們知道如何以這種方式製造我們還可以用電腦製造很多其他的東西。生物的奧秘在於，製造的時候有精細的計算。這邊這個小東西是聚合酶，本質上是一部專門複製DNA的超級電腦。而核醣體是另一部小型電腦可幫助蛋白質的合成。我常常在想在某方面來說用生物材料來建造是很棒的，但我們能夠做類似的事情嗎?我們可以有自我複製的行為嗎?我們可以有複雜三維結構的自我合成嗎?而且是在非生物的系統裡?因為在非生物系統裡有很好的優勢例如，更高速的半導體等等。 所以這就是我的工作，研究如何去建立一個可以自行複製的系統。這有點像是巴貝奇最初設計的計算機這些是小型的機械電腦，這是五狀態的狀態機，有三個並排的電燈開關，在中性狀態下，他們不會自然接合。但假如我做了一串這樣的東西，一個位元字串他們就能自行複製。我們以白、藍、藍、白開始，他們經過編碼，之後就可以自行複製。從一到二，再從二到三，所以就得到了這樣的複製系統。這最初是由Lionel Penrose發現的，也就是Roger Penrose的父親。他在六零年代做了很多這樣的東西，但他很多關於邏輯的理論並沒有被重視現在因為有了數位計算機革命，這理論又有可能發光發熱。 現在我要給大家看的是不經過人工干預且全自動的自行複製過程。輸入的開始狀態是綠色，接著是綠、黃、黃、綠。我們把它放在桌上的冰球遊戲上。很多科學家都愛玩這遊戲。 （笑聲） 如果你看太久你會感到頭昏，但你實際上看到的是原來字串的複製，這都是以零件集裏面出來的。到此，我們看到了位元字串的自行複製。所以，為何你會想要複製位元字串?因為生物有個模仿特性，你拿一個很容易自行複製的線性字串，就可以將它折疊成複雜的三維結構。所以我想，用工程師的想法:我們能夠用非生物的材料來建造一個機械系統而且能執行同樣的過程嗎? 我現在要給你們看的是我們能夠做一個二維形狀圖上的B—它是由一串的零件依照極簡單的規則組合起來的。而我們之所以要用極簡單的規則和前一代極簡單的狀態機，是因為我們不需用數位邏輯來計算。而借此我們可以建構規模比微型晶片更小的東西。所以你可以用這些微小零件來組合。 Neil Gershenfeld 在星期三展示這影片給你們看過了，但我要讓你們再看一遍。這是有色的瓷磚的序列。每一種不同的顏色有不同的磁極，這序列獨特地說明了接下來要出現的結構。假如你們懂一點圖形理論的話，可以看看這裡，你會感到很舒服，因為它還能演化為任意的三維結構，事實上我可以拿一條狗來，切開來然後將它重組成一個線性的長串，然後它會從序列折疊。我還能將三維的物體定義成一串字元。當你用不同的角度去看這世界，這些事很會變得很有趣。宇宙是一台編輯器。於是我在想，那些給實體宇宙執行的程式是什麼?我們如何能將材料與結構的問題變成資訊和計算的問題?不只是把微小的控制器連接到終端，而是把結構和機制當成是運算的邏輯，是一部電腦。 完全了解這哲學後，我開始以不同的角度去看待很多問題。將宇宙視為一個電腦，你可以把一滴水看成為執行計算的結果。你設定一些臨界條件，像重力，表面張力，濃密度等而你按壓執行鍵，很神奇地，宇宙就幫你製造一個完美的球鏡。所以，這個可以應用到一些問題，例如，在這世界有五到十億的人，無法取得便宜的眼鏡。你可以製造一個機器以極快的速度且在任何地點做出人們需要的鏡片嗎?在這一台機器上你要去設定它的臨界條件，如果它是圓的，你可以做成球形鏡片如果它是橢圓的，你可以做出一個散光鏡片。之後把薄膜放在上面，你還可以施加壓力，這一部分就需要另外的程式。事實上只要有兩個輸入：臨界條件的形狀和壓力，就可以定義出無限種可能的鏡片，可涵蓋人類全部的反射缺限，從負十二和正八的屈光度，而後將其澆灌到一個單體上。我現在來學Julia Childs (著名法國菜廚師)這是三分鐘的紫外綫。再換薄膜的另一面受壓，加熱好了後，敲一敲，給他打出來。我看過這段影片，但我不知道結果會不會成功 （笑聲） 你把它翻轉過來，這是一部老片了，在新的設計裏，事實上兩面表面都是有彈性的，現在重點來了。這鏡片作好了，把它拿出來，這會是明年的Yves Klein，鏡片型的作品，你可以看到它有一個很小的負二屈光度。當我以側面旋轉的時倏，你會看到有一個圓柱形這也是預先程式設計就有考慮到的，可以將系統的物理特性設計好。這種將結構視為計算、還有將結構視為資訊的想法可帶出其他的東西，像這個。 這是我在SQUID的朋友做的，叫電子繩。談到繩子你會想到很複雜的纖維結構當不受到外力的時候它是一種結構。在不同的外力下會有不同的結構。你可以利用這個特性，加上一小量的導電纖維使它變成一個感應器。所以這是一個能感應外力的繩子在繩子的各個點上都能感應。想想這世界的物理特性，把材料當成電腦，你可以開始做類似這樣的東西。 現在我將轉換到這個圖。我將要概略地介紹幾種我正在思考的這類東西。我現在很感興趣的一點是利用這種將宇宙視為電腦的觀點，我們如何製造一般的東西，還有我們如何分享我們製造東西的方法和過程，能否像分享開放性硬體一樣簡單?這裏很多的演講支持讓很多人一起看問題、分享資訊和一同工作所帶來的好處。作為一個人我們都是在線性的時間裡移動的，除非Lisa Randall 能改變這個事實不然我們會一直以線性的時間移動。這意味著，做任何事、任何東西，你都會產生一連串的步驟，Lego 在1970年代看到了這一點，並以最優雅的方式展現這一點。他們能展示如何以序列的方式製造東西。我想我們如何能概化做所有東西的方式，你最後就會變成這樣的傢伙（Linux系統），是不是?我想這個可以應用在很多概念。 Cameron Sinclair 昨天說，“我如何能讓每個人一起合作設計為全球的人們提供住宅?”如果你看過Amy Smith的演講，她談到如何讓MIT的學生去幫助海地居民重建社區。我想我們須重新定義和思考，我們如何定義結構和材料和組合東西，我們可以因此分享這些資訊如何以更深層的方式去做這些東西利用其他人的已有基礎來製造。該如何做，很多的細節我不是很清楚，但現在很多人積極地在思考這件事。 所以這會帶來更多的問題，像，這是編輯器還是副程式?等等這類有趣的事。也許我講得太抽象了，但讓我們回到剛才那幅漫畫這樣一種不同的宇宙觀我想未來會相當盛行在生物科技或材料組合上。聽到Bill Joy的演講是很棒的。他們開始投資材料科學但這些在材料科學中是新的。我們如何將真實資訊和結構變成新觀念並以不同的角度看這世界?那將不會是定義宇宙的電腦的二元程式碼而是一種類比電腦。這絕對是一種有趣的新世界觀。 我講得有些離題了。但聽起來就像是這樣。我還有幾分鐘可供提問，介紹我的時候，他們說我在做一些極端的東西這一點我必須解釋一下。也許我該用這短片來解釋一下。 這是一個三千平方英尺的風箏也是一個可以吸取能量的最小表面。還是回到剛才講的以新的方式來看宇宙。這是由Dave Kulp設計的風箏。為何你要一個這麼大的風箏?簡直跟你家的面積一樣大。只有這樣你才能很快地拉動一條船。我也在研究這個跟一些朋友在做。這是另外一種如果我用更抽象的語言來說的話這是一種用宇宙物理來定義的結構。你可以把它掛起來，像被單一樣但經過這些物理特性的計算你得到空氣動力的結構。你幾乎可以加倍你船的速度用像這樣的系統。這是未來一個很有趣的方向。 （掌聲）"
