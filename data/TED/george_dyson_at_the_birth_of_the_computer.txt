Talk	en	zh-tw
george_dyson_at_the_birth_of_the_computer	"Last year, I told you the story, in seven minutes, of Project Orion, which was this very implausible technology that technically could have worked, but it had this one-year political window where it could have happened. So it didn't happen. It was a dream that did not happen. This year I'm going to tell you the story of the birth of digital computing. This was a perfect introduction. And it's a story that did work. It did happen, and the machines are all around us. And it was a technology that was inevitable. If the people I'm going to tell you the story about, if they hadn't done it, somebody else would have. So, it was sort of the right idea at the right time. This is Barricelli's universe. This is the universe we live in now. It's the universe in which these machines are now doing all these things, including changing biology. I'm starting the story with the first atomic bomb at Trinity, which was the Manhattan Project. It was a little bit like TED: it brought a whole lot of very smart people together. And three of the smartest people were Stan Ulam, Richard Feynman and John von Neumann. And it was Von Neumann who said, after the bomb, he was working on something much more important than bombs: he's thinking about computers. So, he wasn't only thinking about them; he built one. This is the machine he built. (Laughter) He built this machine, and we had a beautiful demonstration of how this thing really works, with these little bits. And it's an idea that goes way back. The first person to really explain that was Thomas Hobbes, who, in 1651, explained how arithmetic and logic are the same thing, and if you want to do artificial thinking and artificial logic, you can do it all with arithmetic. He said you needed addition and subtraction. Leibniz, who came a little bit later — this is 1679 — showed that you didn't even need subtraction. You could do the whole thing with addition. Here, we have all the binary arithmetic and logic that drove the computer revolution. And Leibniz was the first person to really talk about building such a machine. He talked about doing it with marbles, having gates and what we now call shift registers, where you shift the gates, drop the marbles down the tracks. And that's what all these machines are doing, except, instead of doing it with marbles, they're doing it with electrons. And then we jump to Von Neumann, 1945, when he sort of reinvents the whole same thing. And 1945, after the war, the electronics existed to actually try and build such a machine. So June 1945 — actually, the bomb hasn't even been dropped yet — and Von Neumann is putting together all the theory to actually build this thing, which also goes back to Turing, who, before that, gave the idea that you could do all this with a very brainless, little, finite state machine, just reading a tape in and reading a tape out. The other sort of genesis of what Von Neumann did was the difficulty of how you would predict the weather. Lewis Richardson saw how you could do this with a cellular array of people, giving them each a little chunk, and putting it together. Here, we have an electrical model illustrating a mind having a will, but capable of only two ideas. (Laughter) And that's really the simplest computer. It's basically why you need the qubit, because it only has two ideas. And you put lots of those together, you get the essentials of the modern computer: the arithmetic unit, the central control, the memory, the recording medium, the input and the output. But, there's one catch. This is the fatal — you know, we saw it in starting these programs up. The instructions which govern this operation must be given in absolutely exhaustive detail. So, the programming has to be perfect, or it won't work. If you look at the origins of this, the classic history sort of takes it all back to the ENIAC here. But actually, the machine I'm going to tell you about, the Institute for Advanced Study machine, which is way up there, really should be down there. So, I'm trying to revise history, and give some of these guys more credit than they've had. Such a computer would open up universes, which are, at the present, outside the range of any instruments. So it opens up a whole new world, and these people saw it. The guy who was supposed to build this machine was the guy in the middle, Vladimir Zworykin, from RCA. RCA, in probably one of the lousiest business decisions of all time, decided not to go into computers. But the first meetings, November 1945, were at RCA's offices. RCA started this whole thing off, and said, you know, televisions are the future, not computers. The essentials were all there — all the things that make these machines run. Von Neumann, and a logician, and a mathematician from the army put this together. Then, they needed a place to build it. When RCA said no, that's when they decided to build it in Princeton, where Freeman works at the Institute. That's where I grew up as a kid. That's me, that's my sister Esther, who's talked to you before, so we both go back to the birth of this thing. That's Freeman, a long time ago, and that was me. And this is Von Neumann and Morgenstern, who wrote the ""Theory of Games."" All these forces came together there, in Princeton. Oppenheimer, who had built the bomb. The machine was actually used mainly for doing bomb calculations. And Julian Bigelow, who took Zworkykin's place as the engineer, to actually figure out, using electronics, how you would build this thing. The whole gang of people who came to work on this, and women in front, who actually did most of the coding, were the first programmers. These were the prototype geeks, the nerds. They didn't fit in at the Institute. This is a letter from the director, concerned about — ""especially unfair on the matter of sugar."" (Laughter) You can read the text. (Laughter) This is hackers getting in trouble for the first time. (Laughter). These were not theoretical physicists. They were real soldering-gun type guys, and they actually built this thing. And we take it for granted now, that each of these machines has billions of transistors, doing billions of cycles per second without failing. They were using vacuum tubes, very narrow, sloppy techniques to get actually binary behavior out of these radio vacuum tubes. They actually used 6J6, the common radio tube, because they found they were more reliable than the more expensive tubes. And what they did at the Institute was publish every step of the way. Reports were issued, so that this machine was cloned at 15 other places around the world. And it really was. It was the original microprocessor. All the computers now are copies of that machine. The memory was in cathode ray tubes — a whole bunch of spots on the face of the tube — very, very sensitive to electromagnetic disturbances. So, there's 40 of these tubes, like a V-40 engine running the memory. (Laughter) The input and the output was by teletype tape at first. This is a wire drive, using bicycle wheels. This is the archetype of the hard disk that's in your machine now. Then they switched to a magnetic drum. This is modifying IBM equipment, which is the origins of the whole data-processing industry, later at IBM. And this is the beginning of computer graphics. The ""Graph'g-Beam Turn On."" This next slide, that's the — as far as I know — the first digital bitmap display, 1954. So, Von Neumann was already off in a theoretical cloud, doing abstract sorts of studies of how you could build reliable machines out of unreliable components. Those guys drinking all the tea with sugar in it were writing in their logbooks, trying to get this thing to work, with all these 2,600 vacuum tubes that failed half the time. And that's what I've been doing, this last six months, is going through the logs. ""Running time: two minutes. Input, output: 90 minutes."" This includes a large amount of human error. So they are always trying to figure out, what's machine error? What's human error? What's code, what's hardware? That's an engineer gazing at tube number 36, trying to figure out why the memory's not in focus. He had to focus the memory — seems OK. So, he had to focus each tube just to get the memory up and running, let alone having, you know, software problems. ""No use, went home."" (Laughter) ""Impossible to follow the damn thing, where's a directory?"" So, already, they're complaining about the manuals: ""before closing down in disgust ... "" ""The General Arithmetic: Operating Logs."" Burning lots of midnight oil. ""MANIAC,"" which became the acronym for the machine, Mathematical and Numerical Integrator and Calculator, ""lost its memory."" ""MANIAC regained its memory, when the power went off."" ""Machine or human?"" ""Aha!"" So, they figured out it's a code problem. ""Found trouble in code, I hope."" ""Code error, machine not guilty."" ""Damn it, I can be just as stubborn as this thing."" (Laughter) ""And the dawn came."" So they ran all night. Twenty-four hours a day, this thing was running, mainly running bomb calculations. ""Everything up to this point is wasted time."" ""What's the use? Good night."" ""Master control off. The hell with it. Way off."" (Laughter) ""Something's wrong with the air conditioner — smell of burning V-belts in the air."" ""A short — do not turn the machine on."" ""IBM machine putting a tar-like substance on the cards. The tar is from the roof."" So they really were working under tough conditions. (Laughter) Here, ""A mouse has climbed into the blower behind the regulator rack, set blower to vibrating. Result: no more mouse."" (Laughter) ""Here lies mouse. Born: ?. Died: 4:50 a.m., May 1953."" (Laughter) There's an inside joke someone has penciled in: ""Here lies Marston Mouse."" If you're a mathematician, you get that, because Marston was a mathematician who objected to the computer being there. ""Picked a lightning bug off the drum."" ""Running at two kilocycles."" That's two thousand cycles per second — ""yes, I'm chicken"" — so two kilocycles was slow speed. The high speed was 16 kilocycles. I don't know if you remember a Mac that was 16 Megahertz, that's slow speed. ""I have now duplicated both results. How will I know which is right, assuming one result is correct? This now is the third different output. I know when I'm licked."" (Laughter) ""We've duplicated errors before."" ""Machine run, fine. Code isn't."" ""Only happens when the machine is running."" And sometimes things are okay. ""Machine a thing of beauty, and a joy forever."" ""Perfect running."" ""Parting thought: when there's bigger and better errors, we'll have them."" So, nobody was supposed to know they were actually designing bombs. They're designing hydrogen bombs. But someone in the logbook, late one night, finally drew a bomb. So, that was the result. It was Mike, the first thermonuclear bomb, in 1952. That was designed on that machine, in the woods behind the Institute. So Von Neumann invited a whole gang of weirdos from all over the world to work on all these problems. Barricelli, he came to do what we now call, really, artificial life, trying to see if, in this artificial universe — he was a viral-geneticist, way, way, way ahead of his time. He's still ahead of some of the stuff that's being done now. Trying to start an artificial genetic system running in the computer. Began — his universe started March 3, '53. So it's almost exactly — it's 50 years ago next Tuesday, I guess. And he saw everything in terms of — he could read the binary code straight off the machine. He had a wonderful rapport. Other people couldn't get the machine running. It always worked for him. Even errors were duplicated. (Laughter) ""Dr. Barricelli claims machine is wrong, code is right."" So he designed this universe, and ran it. When the bomb people went home, he was allowed in there. He would run that thing all night long, running these things, if anybody remembers Stephen Wolfram, who reinvented this stuff. And he published it. It wasn't locked up and disappeared. It was published in the literature. ""If it's that easy to create living organisms, why not create a few yourself?"" So, he decided to give it a try, to start this artificial biology going in the machines. And he found all these, sort of — it was like a naturalist coming in and looking at this tiny, 5,000-byte universe, and seeing all these things happening that we see in the outside world, in biology. This is some of the generations of his universe. But they're just going to stay numbers; they're not going to become organisms. They have to have something. You have a genotype and you have to have a phenotype. They have to go out and do something. And he started doing that, started giving these little numerical organisms things they could play with — playing chess with other machines and so on. And they did start to evolve. And he went around the country after that. Every time there was a new, fast machine, he started using it, and saw exactly what's happening now. That the programs, instead of being turned off — when you quit the program, you'd keep running and, basically, all the sorts of things like Windows is doing, running as a multi-cellular organism on many machines, he envisioned all that happening. And he saw that evolution itself was an intelligent process. It wasn't any sort of creator intelligence, but the thing itself was a giant parallel computation that would have some intelligence. And he went out of his way to say that he was not saying this was lifelike, or a new kind of life. It just was another version of the same thing happening. And there's really no difference between what he was doing in the computer and what nature did billions of years ago. And could you do it again now? So, when I went into these archives looking at this stuff, lo and behold, the archivist came up one day, saying, ""I think we found another box that had been thrown out."" And it was his universe on punch cards. So there it is, 50 years later, sitting there — sort of suspended animation. That's the instructions for running — this is actually the source code for one of those universes, with a note from the engineers saying they're having some problems. ""There must be something about this code that you haven't explained yet."" And I think that's really the truth. We still don't understand how these very simple instructions can lead to increasing complexity. What's the dividing line between when that is lifelike and when it really is alive? These cards, now, thanks to me showing up, are being saved. And the question is, should we run them or not? You know, could we get them running? Do you want to let it loose on the Internet? These machines would think they — these organisms, if they came back to life now — whether they've died and gone to heaven, there's a universe. My laptop is 10 thousand million times the size of the universe that they lived in when Barricelli quit the project. He was thinking far ahead, to how this would really grow into a new kind of life. And that's what's happening! When Juan Enriquez told us about these 12 trillion bits being transferred back and forth, of all this genomics data going to the proteomics lab, that's what Barricelli imagined: that this digital code in these machines is actually starting to code — it already is coding from nucleic acids. We've been doing that since, you know, since we started PCR and synthesizing small strings of DNA. And real soon, we're actually going to be synthesizing the proteins, and, like Steve showed us, that just opens an entirely new world. It's a world that Von Neumann himself envisioned. This was published after he died: his sort of unfinished notes on self-reproducing machines, what it takes to get the machines sort of jump-started to where they begin to reproduce. It took really three people: Barricelli had the concept of the code as a living thing; Von Neumann saw how you could build the machines — that now, last count, four million of these Von Neumann machines is built every 24 hours; and Julian Bigelow, who died 10 days ago — this is John Markoff's obituary for him — he was the important missing link, the engineer who came in and knew how to put those vacuum tubes together and make it work. And all our computers have, inside them, the copies of the architecture that he had to just design one day, sort of on pencil and paper. And we owe a tremendous credit to that. And he explained, in a very generous way, the spirit that brought all these different people to the Institute for Advanced Study in the '40s to do this project, and make it freely available with no patents, no restrictions, no intellectual property disputes to the rest of the world. That's the last entry in the logbook when the machine was shut down, July 1958. And it's Julian Bigelow who was running it until midnight when the machine was officially turned off. And that's the end. Thank you very much. (Applause)"	"去年我花了7分鐘和你們講了“獵戶座計劃”的故事，那是種令人難以置信的科學技術理論上是可行的但由於只有一年的政治窗口期所以它成了一個從未實現的夢。今年我將和你們談一談數位計算的誕生這是一個完美的介紹，並且這是真實發生的故事，類似的機器在我們身邊無處不在。這一技術是歷史的必然產物。今天我在演講裡提到的這群人就算他們沒有研發這一技術，一定會有別的人來研發。所以數位計算算是種順應當時的時代的理念。這是Barricelli世界。這也是今天我們所生活的世界。正是在這樣的世界裡，這些機器現在正做著各種各樣的工作，比如改變我們的生物學研究。首先我想談一談在Trinity進行的第一次原子彈試驗也就是曼哈頓計劃，這有點像我們TED都是把很多絕頂聰明的人匯集在一起。其中3個最聰明的人是斯塔尼斯拉夫·烏拉姆，理查德·費曼和約翰·馮·紐曼在研究完原子彈以後，馮紐曼說他正研究一件比原子彈更重要的事那就是電腦。他不僅僅是空想而已，他還造了一台。這就是他造的機器。（笑聲）他造了這台機器並且他漂亮的演示了這台機器如何以位元為單位運轉位元這一概念其實很早就有了第一個真正解釋這一概念的人叫湯馬斯·霍布斯1651年，他解釋了算數和邏輯從某種意義上說其實是一回事如果你想實現人工思考和人工邏輯，你都可以用算數的方法來實現。他說你只需要做加法和減法就行了。在他之後的萊布尼茨在1679年證明你甚至都不需要做減法只需要做加法就行了。我們有了所有的二進制運算和邏輯這些帶來了電腦革命萊布尼茨是第一個真正討論建造這一機器的人他想利用大理石讓機器實現這樣的運算和邏輯這樣的機器有一種“門”，我們今天稱之為移位寄存器當你打開“門”時，大理石就會從門裡穿過掉在軌道上其實這就是今天我們所有類似機器的運作原理但是用的不是大理石而是電子。接著我們跳到1945年馮諾曼發明了一個幾乎一樣的東西。1945年，二戰之後當時的電子工業真正的開始嘗試建造這麼一種機器所以在1945年的六月，實際上那時候原子彈還沒投下馮諾曼已經把實際生產這種機器所需的一切理論準備好了再來看看Turing (圖靈)他在之前已經有了一個想法，那就是你可以用一種非常簡單，有限狀態的機器完成所有的工作就好比讀取一盤磁帶另一個馮諾曼的天才之處就是克服預測天氣的困難Lewis Richardson發現可以利用單元陣列的人給他們每人一小塊，然後拼在一起這兒我們有一個電子模型，演示了一個有思維的“頭腦”但只有兩個想法（笑聲）這真的要算是最簡單的電腦這基本上解釋了我們為什麼需要量子位元一個位元只有兩種狀態一旦你把很多這樣的量子位元組織起來就成了我們今天電腦的核心部分運算單元、中央控制器、記憶體儲存媒介，輸入和輸出但是有個很致命的一點我們在開始這個程序時會發現指導這一操作的指令必須做到非常非常的詳細所以程式必須設計得非常完美，否則它就無法執行如果你回過頭看，這一切的起因都可以追溯到ENIAC計算機。但是實際上，今天我將要介紹的機器高等研究所的機器，正是擺在那邊的那台真的位置應該在這裡。所以，我正在試圖修改歷史。給這些傢伙更多褒獎。這樣一台電腦開創了一個新的領域這是到目前為止其它任何一台工具所不能比的它開啟了一個嶄新的世界，這樣一群人預見到了。被認為是製造這台機器的人就站在中間，他名叫弗拉迪米爾 佐利金，來自美國廣播公司美國廣播公司，當時可能做了有史以來最糟糕的決定那就是放棄研發電腦。在1945年11月，在美國廣播公司的辦公室召開了第一次會議經過了一番研究，說電視才是未來發展的趨勢，不是電腦。所有的必要元件都在這裡所有可以使這些機器運行的元件。馮諾曼，和一位邏輯學家以及一位軍人數學家把這些元件組裝在一起。接下來他們需要一個地方來建造美國廣告公司拒絕了以後，他們才決定把機器建在弗里曼工作的普林斯頓研究所。我從小在那長大這是我和我姐姐Esther，她之前在這裡演講過所以我們都追溯了這一機器的誕生這是弗里曼很久以前的樣子這是我這是馮諾曼和Morgenstern他們是博弈理論的創始人各方的力量都匯集在普林斯頓奧本哈默，製造原子彈的人這台機器主要用來進行原子彈相關的運算比戈洛（John Bigelow）他是工程師，他用電子元件，找出了製造這一機器的真正方法。這一幫人，包括那個站在前面的女士們，他們編寫了大部分的代碼。所有的這一幫人是歷史上第一批程式設計師。他們也是那些網路怪人，技術狂人的老祖宗研究所不適合他們這是一封來自主任的信，主題為“關於實驗室裏砂糖分配不平均的問題”（笑聲）你們可以自己讀讀原文（笑聲）這是黑客們第一次遇到麻煩（笑聲）這些不是理論物理學家他們是真正的實踐者，是他們親手製造了這一機器。現在我們想當然而地認為這些含有幾十億個電晶體，每秒進行幾十億次計算的機器不會出現差錯。他們當時用真空管，非常不成熟的技術運用無線電真空管實現了二進制運算他們用的是6J6，也就是通用電子管因為他們發現這比那些價錢更貴的電子管更可靠。他們把研究結果的每一步都巨細糜遺地發表隨著研究報告的發布，使得世界其他15個地方也可以製造出相同的機器這台機器真的是微處理器的鼻祖現在所有的電腦都是仿照這台機器。存儲器用的是陰極射線管陰極射線管表面的一簇點對電磁干擾十分敏感所以就有了40個這樣的陰極射線管就好像一個用V-40發動機來跑的存儲器（笑聲）起初的輸入和輸出是靠電傳打字帶使用腳踏車輪，有線驅動這就是我們今天電腦裡硬碟的原型。後來他們改用磁鼓這是一種改良的IBM的設備也是後來IBM整個數據處理行業的起源。這也是電腦圖學的開端下一張幻燈片這是我所知道的最早的數字位圖，誕生於1954年所以馮諾曼那時已經不再是純理論研究而是進行一種抽象性的研究希望利用不穩定的部件製造出可靠的機器。這些喝著摻了糖的茶的人正在他們的記錄本上記錄，試圖讓這一想法實現他們試驗的2600個真空管，有一半時間都是閒置的我過去6個月就一直在看這些記錄“執行時間：2分鐘。輸入，輸出：90分鐘。”這包含了大量的人為錯誤所以他們一直試著辨別到底哪些是機器故障，哪些是人為錯誤是程式碼問題 還是硬體的問題這是一位工程師正盯著36號電子管試圖找出內存位置不對的原因他不得不親自對位 —— 看上去還行所以他必須對位每一個電子管，僅僅為了使內存能恢復執行更不用說遇到軟體問題時他會有多麼手忙腳亂了“沒用，回家。”（笑聲）“完全不可能搞定這該死的東西，電話薄在那？“他們那時已經在抱怨（沒人看得懂的）使用說明書了”這（説明書）實在是讀不下去""“通用算法 —— 運行日誌”開了很多夜車MANIAC，成了這台機器的縮寫數學和數值整合器與計算器，“內存記憶遺失。”“MANIAC在斷電後重新找回內存記憶” “機器故障還是人為錯誤？”“啊哈！” 結果是程式碼的問題“程式碼有問題，但願是如此。”“程式碼錯誤，機器是無辜的。”“該死，我竟變得和這機器一樣難纏”（笑聲）“黎明來了。” 看來他們熬了一整夜。這台機器一天24小時不停的運轉，主要是進行核彈相關的運算“到目前為止所有的工作都是在浪費時間。” “這有什麼用？晚安。”“主控關閉。搞什麼鬼。太離譜了。”“空調出問題了——聞到空氣中皮帶燒焦的味道”“不要開機”“IBM機器的卡片上有了像焦油一樣的油漬，從屋頂掉下來的。”看來他們的工作環境真的很艱苦（笑聲）看這個，“一隻老鼠爬進了鼓風機使得鼓風機震動。結果：老鼠不見了。”（笑聲）“老鼠躺在這裡。出生年月：未知。死於：4:50am, 1953年5月。”（笑聲）有人在這寫了個內部人才能理解的玩笑：“Marston老鼠在此安息。”如果你是個數學家，你就會明白因為Marston是一位反對電腦的數學家“把一只螢火蟲從磁鼓上拿開。” “以兩千赫茲的頻率運行。”那是一秒鐘兩千次的循環“是的，我很膽小"" — 所以兩千次是很慢的速度1萬6千次每秒才是高速我不知道你們是否還記得過去Mac的主頻是16兆赫茲那是很慢的速度”我現在有了兩種結果。假設其中一個結果是正確的，我怎麼才能知道哪一個是正確的呢？現在有了第三種不同的結果我知道我失敗了“（笑聲）”我們之前犯過錯誤“”機器運行正常，程式碼有誤。“”只在機器運行時發生。“有時一切正常。“機器是件美好的事物，是永恆的快樂。” “完美運行。”“臨別思考：當出現更大的錯誤時，我們會解決的。”所以沒有人知道他們在設計核彈。他們在設計氫彈。但是有人在日誌本上，有一天晚上最終畫了一個炸彈。那就是成果。氫彈Mike1952年，第一顆熱核彈正是在那台電腦上被設計出來的。在研究所後面的樹林中所以馮諾曼邀請了這麼一幫來自世界各地的怪人來研究所有這些問題。Barricelli，他當時被邀請過來從事我們現在稱為人造生命的研究要試著去弄清楚，在這個人造的宇宙裏能否實現人造生命他是病毒遺傳學家 —— 他的理論在那個時代大大的超前有些方面甚至比今天的研究還要超前。他試圖在電腦上開始執行一個人造基因系統他的計劃開始於1953年3月3日如果算到下週二的話，基本上就是剛剛好50年前了。他看事物的方式很特別他可以直接看懂機器上用的二進制語言他同機器有著良好的關係其他人無法讓機器運轉時，他總是能夠搞定甚至錯誤都可以一模一樣地複製出來（笑聲）“Barricelli博士稱機器是錯的，程式碼是正確的。”所以他設計了這個宇宙，並且使其自行運行當研究原子彈的人回家時，他就可以進來用他可以整晚使用這些系統有誰記得Stephen Wolfram他重新發明了這個東西他發表了出來，結果後來被鎖在櫃子裡找不到了這些都發布在文獻中“如果創造活的有機體很容易的話，為什麼不造幾個自己？”所以他決定試一試他開始在機器上進行人造生物試驗。他發現了所有這些就好像一個自然學家跑進來觀察這個微小的，5000位元組的世界觀察所有的變化就好比我們從生物的角度看世界一樣這是他創造的世界的幾個版本。但是他們僅僅停留在數字上數字不會變成有機體他們必須具備某些東西你有一個基因型，你就比喻有個表型他們必須走出去做些事，所以他就開始做這些他開始賦予這些數字有機體一些可以工作的事情比如和其他機器下棋等等。接著，這些有機體確實開始進化了他之後跑遍了全國每次出來一種新型快速的機器時，他都要試用一下他都會觀察同樣的結果：程式在你退出的時候並不會停止執行而是繼續執行基本上，所有這些，比如說Windows所做的事情這種多機的多任務處理他全都預見到了。他並且認為進化本身是一個智能過程並不是那種創造者（上帝）才有的智能而是，進化本是就是一個龐大的平行運算有著一定的智能。他特別指出他不認為這是生命或者是一種新的生命這僅僅是同一樣正在發生的事情的另一個版本他正在電腦上做的和自然界過去幾十億年以來發生的沒有區別。現在可以再重作一遍嗎？當我看所有這些檔案資料的時候檔案員有一天走過來說“我們發現了另一個之前被廢棄的盒子。”盒子裡裝著他打在卡片上的小宇宙（程式碼）所以50年以後，有點像暫停的動畫這是執行的指令這實際上是原始碼是給其中一個系統使用的還附帶一張工程師的便條上面寫著這些碼有些問題“一定是一些關於程式碼你還沒有解釋的問題”我想這是真的。我們仍然無法理解這些十分簡單的指令是如何實現如此的複雜的系統的？類生命和真實的生命之間到底怎麼區分？這些卡片，現在因為我的發現，得以保存下來。問題是，我們是否應該去再一次跑這些程式？還跑得起來嗎？是否要將他們放在網上？這些機器會想如果他們現在復活無論他們是不是死去後去了天堂，那總有一個世界我的筆記本比起Barricelli退出這一計劃時留下來的系統大了一萬倍。他當時大膽的設想這些系統怎樣真正發展成一種新的生命體。這也是現在正在發生的當Juan Enriquez告訴我們有12萬億位元正在被來回傳輸以染色體數據的形式聚集到蛋白質組學實驗室這正是Barricelli所設想的那就是這些機器裡的數位碼已經開始編碼它已經從核酸開始編碼我們從聚合酶鏈式反應(PCR)開始就一直在做了並且合成小段的DNA不久我們將會合成蛋白質正如Steve所展示的，這開啟了一個嶄新的世界。這是馮諾曼所設想的世界這在他死後得以發表，是一些他未完成的手稿內容是關於自我繁殖的機器以及是什麼能夠讓機器一下開始進行自我繁殖。有這麼三個人：Barricelli提出了程式碼是活的這一概念馮諾曼發現了怎樣建構這種機器現在，每24小時就有四百萬的馮諾曼式機器生產出來。Julian Bigelow，他10天前去世這是John Markoff寫的追思文：他是被忽視但卻十分重要的一環身為一個工程師他知道怎樣把這些真空管組裝在一起使他們運行。我們今天所有的電腦內部都有著當初他所設計的結構這些結構都是他親手用紙筆畫出草稿的。我們欠他很多他以一種慷慨的方式詮釋了一種精神，使得他可以號召所有的人在40年代來到高等研究院做這個項目的精神並且完全公開結果，不設專利，沒有任何限制沒有任何智慧產權爭議。這是這本日誌的最後幾行寫於1958年7月，機器停止運行的那天。正是Julian Bigelow在機器正式關閉時，一直守著機器運行到午夜我的演講完了。謝謝大家（掌聲）"
